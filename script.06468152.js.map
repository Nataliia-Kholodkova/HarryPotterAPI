{"version":3,"sources":["data/filterHeroes.js","framework/element.js","components/Image/Image.js","components/Error/Error.js","js/utils.js","components/MainHeroCard/MainHeroCard.js","components/HeroCard/HeroCard.js","components/HeroesList/HeroesList.js","components/Main/Main.js","components/Input/Input.js","components/Legend/Legend.js","components/Fieldset/Fieldset.js","components/Form/Form.js","js/buildState.js","components/Aside/Aside.js","components/Header/Header.js","components/App/App.js","js/hero.js","data/getHroesList.js","data/getData.js","handlers/formFilter.js","handlers/giveCard.js","handlers/slider.js","handlers/resetFilter.js","framework/framework.js","script.js"],"names":["filterFromState","dataHeroes","fileteredHeroes","Object","entries","window","STATE","reduce","initial","entry","then","result","key","value","newdataHeroes","filter","hero","toLowerCase","includes","Promise","resolve","reject","resultHeroes","length","Error","createElement","tag","props","children","element","DocumentFragment","document","forEach","name","startsWith","addEventListener","substr","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","Image","url","width","imgClasses","join","reloadHandler","styles","hat","event","generateOccupation","occupationTemplate","fromHogwarts","hogwartsStaff","house","getRandomHero","Math","floor","random","getHero","id","find","item","setUrl","URL","location","href","search","param","searchParams","delete","set","history","pushState","MainHeroCard","image","dateOfBirth","hairColour","eyeColour","patronus","actor","HeroCard","HeroesList","heroes","map","Main","heroList","cardHandler","errorHandler","sliderHandler","buttons","main","results","Input","state","imgNeed","handler","labelClasses","_class","type","inputClasses","placeholder","spanClasses","Legend","legend","legendClasses","Fieldset","isFieldset","fieldsetClasses","Form","formState","listener","resetNeed","resetFilterHandler","formClasses","_state","FORM_STATE","faculty","values","imgUrls","Gryffindor","gryffindorUrl","Hufflepuff","hufflepuffUrl","Ravenclaw","ravenclawUrl","Slytherin","slytherinUrl","All","allUrl","Aside","filterHandler","resetHandler","aside","Header","funcFaculty","header","App","formHandler","template","target","querySelector","innerHTML","Hero","constructor","gender","hogwartsStudent","species","alive","hogwarts","assignHoggwarts","slice","constructHeroesList","URL_ADDR","getHeroesFromServer","fetch","response","json","catch","formFilterHandler","closest","card","dataset","sliderMove","slider","sliderWidth","offsetWidth","cardWidth","direction","dir","cardsPerSlider","round","totalSliderWidth","left","style","parseInt","abs","staff","isAlive","createApp"],"mappings":"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","file":"script.06468152.js","sourceRoot":"..\\src","sourcesContent":["export default function filterFromState(dataHeroes) {\r\n  const fileteredHeroes = Object.entries(window.STATE).reduce(\r\n    (initial, entry) =>\r\n      initial.then(result => {\r\n        if (entry[1] !== null) {\r\n          const [key, value] = entry;\r\n          if (value === 'All') {\r\n            return result;\r\n          }\r\n          const newdataHeroes = result.filter(hero => {\r\n            switch (key) {\r\n              case 'name':\r\n                return hero[key].toLowerCase().includes(value.toLowerCase());\r\n              default:\r\n                return hero[key].toLowerCase() === value.toLowerCase();\r\n            }\r\n          });\r\n          return new Promise((resolve, reject) => resolve(newdataHeroes));\r\n        }\r\n        return new Promise((resolve, reject) => resolve(result));\r\n      }),\r\n    Promise.resolve(dataHeroes),\r\n  );\r\n  return fileteredHeroes.then(resultHeroes => {\r\n    if (resultHeroes.length === 0) {\r\n      throw new Error('No magic heros matching current parameters. Please, reload.');\r\n    }\r\n    return resultHeroes;\r\n  });\r\n}\r\n","/**\r\n * Creates DOM Node. Implements jsx-parser's createElement API\r\n * @param {string|Function} tag - HTML tag as string or Component function\r\n * @param {object} props - element properties as parsed by jsx-parser\r\n * @param {Node[]} children - child elements\r\n * @returns {DocumentFragment|Element}\r\n */\r\n\r\nexport const createElement = (tag, props, ...children) => {\r\n  if (typeof tag === 'function') {\r\n    /*\r\n        Passing children as the 2nd argument is required as jsx transformer puts component functions\r\n        and regular tags in wrapper functions that expect children as the 2nd param\r\n       */\r\n    return tag({ ...props, children }, children);\r\n  }\r\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\r\n  Object.entries(props || {}).forEach(([name, value]) => {\r\n    if (name.startsWith('on') && name.toLowerCase() in window) {\r\n      element.addEventListener(\r\n        name.toLowerCase().substr(2),\r\n        /** @type {Function} */\r\n        value,\r\n      );\r\n    } else {\r\n      try {\r\n        if (!(element instanceof DocumentFragment)) {\r\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\r\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\r\n          if (['disabled', 'checked'].includes(name) && !value) {\r\n            element.removeAttribute(name);\r\n          } else {\r\n            element.setAttribute(name, value);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error('createElement caught', e, 'on', element);\r\n      }\r\n    }\r\n  });\r\n\r\n  children.forEach(child => appendChild(element, child));\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Appends child elements from an unbound array of children, recursively\r\n * @param {Node} parent\r\n * @param {Node|[Node]} child\r\n */\r\nconst appendChild = (parent, child) => {\r\n  if (Array.isArray(child)) {\r\n    child.forEach(subChild => appendChild(parent, subChild));\r\n  } else {\r\n    // Skip null and undefined\r\n    if (child != null) {\r\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Creates Fragment. Implements jsx-parser's createFragment API\r\n * @param {object} props - effectively a placeholder, fragment never has any properties\r\n * @param {Node[]} children - child elements\r\n * @returns {DocumentFragment}\r\n */\r\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\n\r\nexport default function Image({ value, url, width, imgClasses }) {\r\n  return (\r\n    <>\r\n      <img\r\n        class={imgClasses.join(' ')}\r\n        src={url}\r\n        alt={value}\r\n        width={value === 'All' ? '150' : width}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport hat from './img/hat.png';\r\nimport Image from '../Image/Image';\r\nimport styles from './styles.css';\r\n\r\nexport default function Error({ error, reloadHandler }) {\r\n  if (!error) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <div class={styles.error}>\r\n        <Image value={'Sorting hat'} url={hat} width={'150'} imgClasses={['']} />\r\n        <h1 class={'title-main'} style=\"color: #2a221e\">\r\n          {error}\r\n        </h1>\r\n        <button\r\n          type=\"button\"\r\n          class={`btn ${styles['btn-reset']}`}\r\n          name=\"reload\"\r\n          onClick={event => reloadHandler(event)}\r\n        >\r\n          Reload\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","function generateOccupation(hero) {\r\n  let occupationTemplate = '';\r\n  if (hero.fromHogwarts()) {\r\n    if (hero.hogwartsStaff) {\r\n      occupationTemplate += 'Professor of ';\r\n    } else {\r\n      occupationTemplate += 'Student of ';\r\n    }\r\n  } else {\r\n    occupationTemplate += 'Not from ';\r\n  }\r\n  occupationTemplate += 'Hogwarts';\r\n  if (hero.house) {\r\n    occupationTemplate += `, ${hero.house}`;\r\n  }\r\n  occupationTemplate += '.';\r\n  return occupationTemplate;\r\n}\r\n\r\nfunction getRandomHero(dataHeroes) {\r\n  const index = Math.floor(Math.random() * dataHeroes.length);\r\n  return dataHeroes[index];\r\n}\r\n\r\nfunction getHero(dataHeroes, id) {\r\n  const hero = dataHeroes.find(item => item.id === id);\r\n  return hero;\r\n}\r\n\r\nfunction setUrl() {\r\n  const url = new URL(window.location.href);\r\n  url.search = '';\r\n  for (let param in window.STATE) {\r\n    if (window.STATE[param] === null || window.STATE[param] === '') {\r\n      url.searchParams.delete(param);\r\n    } else {\r\n      url.searchParams.set(param, window.STATE[param]);\r\n    }\r\n  }\r\n  window.history.pushState({}, '', url);\r\n}\r\n\r\nexport { getHero, generateOccupation, getRandomHero, setUrl };\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport { generateOccupation } from '../../js/utils';\r\nimport Image from '../Image/Image';\r\nimport styles from './styles.css';\r\n\r\nexport default function MainHeroCard({ hero = null }) {\r\n  if (!hero) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <div class={`hero-card ${styles['hero-card__big']}`} id=\"hero-card__big\">\r\n        <Image\r\n          value={hero.name}\r\n          url={hero.image}\r\n          width={'150'}\r\n          imgClasses={['card-img', styles['card-img__big']]}\r\n        />\r\n        <div class={styles['hero-description']}>\r\n          <h2 class={`title card-title`}>{hero.name}</h2>\r\n          <p class={`text card-text`}>\r\n            <span class={'hero-name'}>{hero.name}</span> was bourn\r\n            <span class={'hero-birth-date'}>{hero.dateOfBirth}</span>.\r\n            <span class={'hero-occupation'}>{generateOccupation(hero)}</span>\r\n          </p>\r\n          <p class={`text card-text`}>\r\n            Has <span class={'hero-hair'}>{hero.hairColour}</span> hair,\r\n            <span class={'hero-eyes'}>{hero.eyeColour}</span> eyes. Patronus -\r\n            <span class={'hero-patronus'}>{hero.patronus}</span>\r\n          </p>\r\n          <p class={`text card-text`}>\r\n            Acted by\r\n            <span class={'hero-actor'}>{hero.actor}</span>.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { generateOccupation } from '../../js/utils';\nimport Image from '../Image/Image';\nimport styles from './styles.css';\n\nexport default function HeroCard({ hero = null }) {\n  if (!hero) {\n    return null;\n  }\n  return (\n    <>\n      <div class={`hero-card ${styles['hero-card__small']}`} data-id={hero.id}>\n        <Image\n          value={hero.name}\n          url={hero.image}\n          width={'150'}\n          imgClasses={['card-img', styles['card-img__small']]}\n        />\n        <div class={styles['hero-description']}>\n          <h3 class={`title card-title`}>{hero.name}</h3>\n          <p class={`text card-text`}>\n            <span class={'hero-name'}>{hero.name}</span> was bourn\n            <span class={'hero-birth-date'}>{hero.dateOfBirth}</span>.\n            <span class={'hero-occupation'}>{generateOccupation(hero)}</span>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport HeroCard from '../HeroCard/HeroCard';\r\n\r\nexport default function HeroesList({ heroes }) {\r\n  return (\r\n    <>\r\n      {heroes.map(hero => (\r\n        <HeroCard hero={hero} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport Error from '../Error/Error';\nimport MainHeroCard from '../MainHeroCard/MainHeroCard';\nimport HeroesList from '../HeroesList/HeroesList';\nimport styles from './styles.css';\n\nexport default function Main({ hero, heroList, cardHandler, error, errorHandler, sliderHandler }) {\n  const buttons = (\n    <>\n      <button\n        type=\"button\"\n        class={`btn ${styles['btn-list']} ${styles['btn-list__left']}`}\n        data-dir={'1'}\n        onclick={event => sliderHandler(event)}\n      >\n        &lsaquo;\n      </button>\n      <button\n        type=\"button\"\n        class={`btn ${styles['btn-list']} ${styles['btn-list__right']}`}\n        data-dir={'-1'}\n        onclick={event => sliderHandler(event)}\n      >\n        &rsaquo;\n      </button>\n    </>\n  );\n  return (\n    <>\n      <main class={styles.main}>\n        <div class={styles.results}>\n          {buttons}\n          <div class={styles['hero-list']}>\n            <Error error={error} reloadHandler={errorHandler} />\n            <MainHeroCard hero={hero} />\n            <div class={styles['hero-list__wrapper']}>\n              <div\n                class={styles['hero-list__slider']}\n                id=\"slider\"\n                onclick={event => cardHandler(event)}\n              >\n                <HeroesList heroes={heroList} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport Image from '../Image/Image';\r\nimport styles from './styles.css';\r\n\r\nexport default function Input({ state, imgNeed, handler }) {\r\n  return (\r\n    <>\r\n      {state['values'].map(value => (\r\n        <label class={`form-label ${state.labelClasses.map(_class => styles[_class]).join(' ')}`}>\r\n          <input\r\n            type={state.type}\r\n            class={`\r\n              ${\r\n                state.inputClasses.includes('visually-hidden') ? 'visually-hidden' : ''\r\n              } ${state.inputClasses.map(_class => styles[_class]).join(' ')}`}\r\n            value={state.placeholder ? window.STATE[state.name] || '' : value}\r\n            name={state.name}\r\n            placeholder={state.placeholder || null}\r\n            checked={window.STATE[state.name] === value}\r\n          />\r\n          {imgNeed === true ? (\r\n            <Image\r\n              value={value}\r\n              url={state['imgUrls'][value]}\r\n              width={'120px'}\r\n              imgClasses={[styles['img-checkbox']]}\r\n            />\r\n          ) : (\r\n            ''\r\n          )}\r\n          <span\r\n            class={`label ${state.spanClasses.includes('visually-hidden') ? 'visually-hidden' : ''}\r\n              ${state.spanClasses.map(_class => styles[_class]).join(' ')}\r\n            `}\r\n          >\r\n            {value.length > 0 ? value : 'None'}\r\n          </span>\r\n        </label>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement } from '../../framework/element';\r\nimport styles from './styles.css';\r\n\r\nexport default function Legend({ state }) {\r\n  if (!state.legend) {\r\n    return null;\r\n  }\r\n  return <legend class={`legend ${styles[state.legendClasses]}`}>{state.legend}</legend>;\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport Input from '../Input/Input';\r\nimport Legend from '../Legend/Legend';\r\nimport styles from './styles.css';\r\n\r\nexport default function Fieldset({ state, imgNeed, isFieldset }) {\r\n  if (isFieldset) {\r\n    return (\r\n      <>\r\n        <fieldset class={`fieldset ${styles[state.fieldsetClasses]}`}>\r\n          <Legend state={state} />\r\n          <Input state={state} imgNeed={imgNeed} />\r\n        </fieldset>\r\n      </>\r\n    );\r\n  }\r\n  return <Input state={state} imgNeed={imgNeed} />;\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport Fieldset from '../Fieldset/Fieldset';\r\nimport styles from './styles.css';\r\n\r\nexport default function Form({\r\n  formState,\r\n  listener,\r\n  imgNeed = false,\r\n  isFieldset = false,\r\n  resetNeed = false,\r\n  resetFilterHandler = null,\r\n}) {\r\n  return (\r\n    <form class={`form ${styles[formState[0].formClasses]}`} onChange={event => listener(event)}>\r\n      {formState.map(_state => (\r\n        <Fieldset state={_state} imgNeed={imgNeed} isFieldset={isFieldset} />\r\n      ))}\r\n      {resetNeed ? (\r\n        <>\r\n          <button\r\n            type=\"reset\"\r\n            class={`btn btn-reset`}\r\n            name=\"reset\"\r\n            type=\"reset\"\r\n            onClick={event => resetFilterHandler(event)}\r\n          >\r\n            Reset\r\n          </button>\r\n        </>\r\n      ) : null}\r\n    </form>\r\n  );\r\n}\r\n","import allUrl from './img/all.png';\nimport gryffindorUrl from './img/gryffindor.png';\nimport hufflepuffUrl from './img/hufflepuff.png';\nimport ravenclawUrl from './img/ravenclaw.png';\nimport slytherinUrl from './img/slytherin.png';\n\nconst FORM_STATE = {\n  faculty: [\n    {\n      name: 'house',\n      values: ['Gryffindor', 'Hufflepuff', 'Ravenclaw', 'Slytherin', 'All'],\n      inputClasses: ['faculty-form__box', 'visually-hidden'],\n      imgClasses: ['img-checkbox'],\n      labelClasses: [],\n      legendClasses: '',\n      formClasses: 'faculty-form',\n      spanClasses: ['visually-hidden'],\n      imgUrls: {\n        Gryffindor: gryffindorUrl,\n        Hufflepuff: hufflepuffUrl,\n        Ravenclaw: ravenclawUrl,\n        Slytherin: slytherinUrl,\n        All: allUrl,\n      },\n      legend: '',\n      placeholder: '',\n      type: 'radio',\n    },\n  ],\n\n  filter: [\n    {\n      name: 'hogwarts',\n      values: ['Staff', 'Student', '', 'All'],\n      inputClasses: ['radio-input', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label'],\n      formClasses: 'filter-form',\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: 'Filter by Staff',\n      placeholder: '',\n      type: 'radio',\n    },\n\n    {\n      name: 'gender',\n      values: ['Male', 'Female', 'All'],\n      inputClasses: ['radio-input', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label'],\n      formClasses: 'filter-form',\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: 'Filter by Gender',\n      placeholder: '',\n      type: 'radio',\n    },\n\n    {\n      name: 'alive',\n      values: ['Alive', 'Dead', 'All'],\n      inputClasses: ['radio-input', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label'],\n      formClasses: 'filter-form',\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: 'Filter by Destiny',\n      placeholder: '',\n      type: 'radio',\n    },\n\n    {\n      name: 'name',\n      values: [''],\n      inputClasses: ['text-input'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label', 'form-label__text'],\n      formClasses: 'filter-form',\n      spanClasses: ['visually-hidden'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: '',\n      placeholder: \"Hero's name\",\n      type: 'search',\n    },\n  ],\n\n  random: [\n    {\n      name: 'random',\n      values: ['Get random heroes'],\n      inputClasses: ['input, radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Gnerate random Heroes',\n      placeholder: '',\n      type: 'radio',\n    },\n  ],\n};\n\nexport default FORM_STATE;\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement } from '../../framework/element';\r\nimport Form from '../Form/Form';\r\nimport FORM_STATE from '../../js/buildState';\r\nimport styles from './styles.css';\r\n\r\nexport default function Aside({ filterHandler, resetHandler }) {\r\n  return (\r\n    <aside class={styles.aside}>\r\n      <Form\r\n        formState={FORM_STATE.filter}\r\n        listener={filterHandler}\r\n        imgNeed={false}\r\n        isFieldset={true}\r\n        resetNeed={true}\r\n        resetFilterHandler={resetHandler}\r\n      />\r\n    </aside>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement } from '../../framework/element';\r\nimport Form from '../Form/Form';\r\nimport FORM_STATE from '../../js/buildState';\r\nimport styles from './styles.css';\r\n\r\nexport default function Header({ funcFaculty }) {\r\n  return (\r\n    <header class={styles.header}>\r\n      <div class={'wrapper'}>\r\n        <h1 class={`title title-main`}>Welcome to the magic World of Hogwarts</h1>\r\n        <Form formState={FORM_STATE.faculty} listener={funcFaculty} imgNeed={true} />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport Main from '../Main/Main';\r\nimport Aside from '../Aside/Aside';\r\nimport Header from '../Header/Header';\r\nimport styles from './styles.css';\r\n\r\nexport default function App(\r\n  dataHeroes,\r\n  hero,\r\n  error,\r\n  formHandler,\r\n  cardHandler,\r\n  resetHandler,\r\n  sliderHandler,\r\n  errorHandler,\r\n) {\r\n  const template = (\r\n    <>\r\n      <Header funcFaculty={formHandler} />\r\n      <div class={`wrapper ${styles['main-wrapper']}`}>\r\n        <Aside filterHandler={formHandler} resetHandler={resetHandler} />\r\n        <Main\r\n          hero={hero}\r\n          heroList={dataHeroes}\r\n          cardHandler={cardHandler}\r\n          error={error}\r\n          errorHandler={errorHandler}\r\n          sliderHandler={sliderHandler}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n  const target = document.querySelector('.container');\r\n  target.innerHTML = '';\r\n  target.appendChild(template);\r\n}\r\n","class Hero {\r\n  constructor({\r\n    name,\r\n    dateOfBirth,\r\n    eyeColour,\r\n    hairColour,\r\n    gender,\r\n    hogwartsStaff,\r\n    hogwartsStudent,\r\n    house,\r\n    image,\r\n    patronus,\r\n    species,\r\n    alive,\r\n    actor,\r\n  }) {\r\n    this.name = name;\r\n    this.dateOfBirth = dateOfBirth;\r\n    this.eyeColour = eyeColour;\r\n    this.hairColour = hairColour;\r\n    this.gender = gender;\r\n    this.hogwartsStaff = hogwartsStaff;\r\n    this.hogwartsStudent = hogwartsStudent;\r\n    this.hogwarts = this.assignHoggwarts();\r\n    this.house = house;\r\n    this.patronus = patronus;\r\n    this.species = species;\r\n    this.image = `${image.slice(0, 4)}s${image.slice(4)}`;\r\n    this.alive = alive === true ? 'alive' : 'dead';\r\n    this.actor = actor;\r\n    this.id = null;\r\n  }\r\n\r\n  fromHogwarts = () => !!(this.hogwartsStaff || this.hogwartsStudent);\r\n\r\n  assignHoggwarts = () => {\r\n    switch (this.fromHogwarts()) {\r\n      case true:\r\n        switch (this.hogwartsStaff) {\r\n          case true:\r\n            return 'staff';\r\n          default:\r\n            return 'student';\r\n        }\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n}\r\n\r\nexport default Hero;\r\n","import Hero from '../js/hero';\r\n\r\nexport default function constructHeroesList(dataHeroes) {\r\n  let id = 1;\r\n  const heroes = dataHeroes.map(item => {\r\n    const hero = new Hero(item);\r\n    hero.id = id;\r\n    id += 1;\r\n    return hero;\r\n  });\r\n  return heroes;\r\n}\r\n","import constructHeroesList from './getHroesList';\r\nconst URL_ADDR = 'https://hp-api.herokuapp.com/api/characters';\r\n\r\nexport default function getHeroesFromServer() {\r\n  return fetch(`${URL_ADDR}`)\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(dataHeroes => constructHeroesList(dataHeroes))\r\n    .catch(error => {\r\n      throw new Error('Cannot load the data. Please, reload');\r\n    });\r\n}\r\n","import createApp from '../framework/framework';\n\nexport default function formFilterHandler(event) {\n  const element = event.target.closest('input');\n  if (!element) {\n    return;\n  }\n  switch (element.value) {\n    case 'all':\n      window.STATE[element.name] = null;\n      break;\n    default:\n      window.STATE[element.name] = element.value;\n  }\n  createApp();\n}\n","import createApp from '../framework/framework';\nimport styles from '../components/HeroCard/styles.css';\nexport default function cardHandler(event) {\n  const card = event.target.closest(`div.${styles['hero-card__small']}`);\n  let id = false;\n  if (!card) {\n    return;\n  }\n  id = +card.dataset.id;\n  createApp(id);\n}\n","export default function sliderMove(event) {\r\n  const slider = document.querySelector('#slider');\r\n  const sliderWidth = slider.offsetWidth;\r\n  const cardWidth = slider.querySelector(`div`).offsetWidth + 15;\r\n  const direction = +event.target.dataset.dir;\r\n  const cardsPerSlider = Math.round(sliderWidth / cardWidth);\r\n  const totalSliderWidth = cardWidth * slider.children.length;\r\n  const left = slider.style.left ? parseInt(slider.style.left, 10) : 0;\r\n  if (\r\n    Math.abs(left + direction * cardWidth) >\r\n    totalSliderWidth - (cardsPerSlider === 1 ? cardsPerSlider : cardsPerSlider - 1) * cardWidth\r\n  ) {\r\n    slider.style.left = '0px';\r\n  } else if (left + direction * cardWidth > 0) {\r\n    slider.style.left = `-${\r\n      (slider.children.length * cardWidth - cardsPerSlider * cardWidth) * direction\r\n    }px`;\r\n  } else {\r\n    slider.style.left = `${left + cardWidth * direction}px`;\r\n  }\r\n}\r\n","import createApp from '../framework/framework';\r\n\r\nexport default function resetFilterHandler() {\r\n  window.STATE = {\r\n    house: null,\r\n    gender: null,\r\n    name: null,\r\n    staff: null,\r\n    isAlive: null,\r\n  };\r\n  createApp();\r\n}\r\n","import filterFromState from '../data/filterHeroes';\r\nimport App from '../components/App/App';\r\nimport getHeroesFromServer from '../data/getData';\r\nimport formFilterHandler from '../handlers/formFilter';\r\nimport cardHandler from '../handlers/giveCard';\r\nimport sliderHandler from '../handlers/slider';\r\nimport resetFilterHandler from '../handlers/resetFilter';\r\nimport { getRandomHero, getHero, setUrl } from '../js/utils';\r\n\r\nexport default function createApp(id = null) {\r\n  setUrl();\r\n  getHeroesFromServer()\r\n    .then(heroes => filterFromState(heroes))\r\n    .then(heroes => {\r\n      const hero = id ? getHero(heroes, id) : getRandomHero(heroes);\r\n      App(\r\n        heroes,\r\n        hero,\r\n        null,\r\n        formFilterHandler,\r\n        cardHandler,\r\n        resetFilterHandler,\r\n        sliderHandler,\r\n        resetFilterHandler,\r\n      );\r\n    })\r\n    .catch(error =>\r\n      App(\r\n        [],\r\n        null,\r\n        error,\r\n        formFilterHandler,\r\n        cardHandler,\r\n        resetFilterHandler,\r\n        sliderHandler,\r\n        resetFilterHandler,\r\n      ),\r\n    );\r\n}\r\n\r\nwindow.STATE = {\r\n  house: null,\r\n  gender: null,\r\n  name: null,\r\n  hogwarts: null,\r\n  isAlive: null,\r\n};\r\n","import createApp from './framework/framework';\r\n\r\ncreateApp();\r\n"]}