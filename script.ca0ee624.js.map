{"version":3,"sources":["utils/utils.js","framework/hooks.js","framework/element.js","framework/framework.js","components/Image/Image.js","components/Error/Error.js","framework/context.js","context.js","utils/slider.js","components/MainHeroCard/MainHeroCard.js","components/HeroCard/HeroCard.js","components/HeroesList/HeroesList.js","components/Main/helpers.js","components/Main/Main.js","components/Input/Input.js","components/Legend/Legend.js","components/Fieldset/Fieldset.js","components/Form/Form.js","utils/buildState.js","components/Aside/Aside.js","components/Header/Header.js","data/filterHeroes.js","utils/hero.js","data/getHroesList.js","data/getData.js","customHooks.js","components/App/App.js","script.js"],"names":["generateOccupation","hero","occupationTemplate","fromHogwarts","hogwartsStaff","house","getHero","dataHeroes","id","find","item","Math","floor","random","length","setUrl","state","params","URLSearchParams","window","location","search","param","set","delete","history","replaceState","decodeURIComponent","pathname","isFunction","func","compareState","nextDeps","i","hasOwnProperty","needReload","current","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","queue","forEach","action","push","useEffect","effect","deps","oldDeps","undefined","hasChanged","hasDepsChanged","unmount","removeEventListener","addEventListener","prevDeps","some","dep","index","useContext","Context","value","createElement","element","DocumentFragment","document","Object","entries","name","startsWith","toLowerCase","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","timer","render","Component","target","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","Image","url","width","imgClasses","join","Error","setState","styles","hat","event","gender","hogwarts","isAlive","createContext","defaultValue","context","Provider","Consumer","hasWarnedAboutUsingUseContext","is","renderFunction","warn","AppContext","useAppContext","sliderMove","slider","querySelector","sliderWidth","offsetWidth","cardWidth","direction","dataset","dir","cardsPerSlider","round","totalSliderWidth","left","style","parseInt","abs","MainHeroCard","image","dateOfBirth","hairColour","eyeColour","patronus","actor","HeroCard","HeroesList","currentHeroes","map","generateButtons","sliderHandler","buttons","generateData","appState","heroesData","setHeroesState","clickHandler","card","closest","heroId","data","Main","keys","main","results","Input","imgNeed","labelClasses","_class","type","inputClasses","placeholder","spanClasses","Legend","legend","legendClasses","Fieldset","isFieldset","fieldsetClasses","Form","resetNeed","formState","formHandler","formClasses","_state","FORM_STATE","faculty","values","imgUrls","Gryffindor","gryffindorUrl","Hufflepuff","hufflepuffUrl","Ravenclaw","ravenclawUrl","Slytherin","slytherinUrl","All","allUrl","filter","Aside","aside","Header","header","filterFromState","fileteredHeroes","reduce","entry","key","Hero","constructor","hogwartsStudent","species","alive","assignHoggwarts","slice","constructHeroesList","heroes","URL_ADDR","getHeroesFromServer","fetch","then","response","json","catch","useHeroes","heroesState","setError","heroesList","heroItemId","heroItem","errorItem","App","template"],"mappings":"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","file":"script.ca0ee624.js","sourceRoot":"..\\src","sourcesContent":["function generateOccupation(hero) {\n  let occupationTemplate = '';\n  if (hero.fromHogwarts()) {\n    if (hero.hogwartsStaff) {\n      occupationTemplate += 'Professor of ';\n    } else {\n      occupationTemplate += 'Student of ';\n    }\n  } else {\n    occupationTemplate += 'Not from ';\n  }\n  occupationTemplate += 'Hogwarts';\n  if (hero.house) {\n    occupationTemplate += `, ${hero.house}`;\n  }\n  occupationTemplate += '.';\n  return occupationTemplate;\n}\n\nfunction getHero(dataHeroes, id) {\n  const hero = id\n    ? dataHeroes.find(item => item.id === id)\n    : dataHeroes[Math.floor(Math.random() * dataHeroes.length)];\n  return hero;\n}\n\nfunction setUrl(state) {\n  const params = new URLSearchParams(window.location.search);\n  for (let param in state.state) {\n    if (!state.state[param]) {\n      params.delete(param);\n    } else {\n      params.set(param, state.state[param]);\n    }\n  }\n  window.history.replaceState({}, '', decodeURIComponent(`${window.location.pathname}?${params}`));\n}\n\nconst isFunction = func => typeof func === 'function';\n\nexport { getHero, generateOccupation, setUrl, isFunction };\n","import { isFunction } from '../utils/utils';\n\nfunction compareState(nextDeps) {\n  if (!nextDeps) {\n    return false;\n  }\n  for (let i = 0; i < nextDeps.length; i++) {\n    if (!nextDeps[i] || !nextDeps[i].hasOwnProperty('needReload')) {\n      continue;\n    }\n    return nextDeps[i].needReload === true;\n  }\n}\n\nexport const current = {\n  shouldReRender: true,\n  wipComponent: null,\n  hookIndex: null,\n};\n\nexport function createFunctionElement(tag, props, children) {\n  current.wipComponent = tag;\n  current.hookIndex = 0;\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\n\n  return tag({ ...props, children }, children);\n}\n\nexport function useState(initial) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const hook = {\n    state: oldHook ? oldHook.state : initial,\n    queue: [],\n  };\n\n  const actions = oldHook ? oldHook.queue : [];\n\n  actions.forEach(action => {\n    hook.state = isFunction(action) ? action(hook.state) : action;\n  });\n\n  const setState = action => {\n    current.shouldReRender = true;\n    hook.queue.push(action);\n  };\n\n  wipComponent.hooks[hookIndex] = hook;\n  current.hookIndex++;\n  return [hook.state, setState];\n}\n\nexport function useEffect(effect, deps) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const oldDeps = oldHook ? oldHook.deps : undefined;\n\n  const hasChanged = hasDepsChanged(oldDeps, deps);\n  const needReload = compareState(deps);\n\n  if (!hasChanged && !needReload) return;\n\n  if (oldHook && oldHook.unmount) {\n    window.removeEventListener('beforeunload', oldHook.unmount);\n  }\n\n  wipComponent.hooks[hookIndex] = {\n    unmount: effect(),\n    deps,\n  };\n\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\n\n  current.hookIndex++;\n}\n\nconst hasDepsChanged = (prevDeps, nextDeps) =>\n  !prevDeps ||\n  !nextDeps ||\n  prevDeps.length !== nextDeps.length ||\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\n\nexport const useContext = Context => Context.value;\n","/**\r\n * Creates DOM Node. Implements jsx-parser's createElement API\r\n * @param {string|Function} tag - HTML tag as string or Component function\r\n * @param {object} props - element properties as parsed by jsx-parser\r\n * @param {Node[]} children - child elements\r\n * @returns {DocumentFragment|Element}\r\n */\r\nimport { createFunctionElement } from './hooks';\r\n\r\nexport const createElement = (tag, props, ...children) => {\r\n  if (typeof tag === 'function') {\r\n    /*\r\n        Passing children as the 2nd argument is required as jsx transformer puts component functions\r\n        and regular tags in wrapper functions that expect children as the 2nd param\r\n       */\r\n    return createFunctionElement(tag, props, children);\r\n  }\r\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\r\n  Object.entries(props || {}).forEach(([name, value]) => {\r\n    if (name.startsWith('on') && name.toLowerCase() in window) {\r\n      element.addEventListener(\r\n        name.toLowerCase().substr(2),\r\n        /** @type {Function} */\r\n        value,\r\n      );\r\n    } else {\r\n      try {\r\n        if (!(element instanceof DocumentFragment)) {\r\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\r\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\r\n          if (['disabled', 'checked'].includes(name) && !value) {\r\n            element.removeAttribute(name);\r\n          } else {\r\n            element.setAttribute(name, value);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error('createElement caught', e, 'on', element);\r\n      }\r\n    }\r\n  });\r\n\r\n  children.forEach(child => appendChild(element, child));\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Appends child elements from an unbound array of children, recursively\r\n * @param {Node} parent\r\n * @param {Node|[Node]} child\r\n */\r\nconst appendChild = (parent, child) => {\r\n  if (Array.isArray(child)) {\r\n    child.forEach(subChild => appendChild(parent, subChild));\r\n  } else {\r\n    // Skip null and undefined\r\n    if (child != null) {\r\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Creates Fragment. Implements jsx-parser's createFragment API\r\n * @param {object} props - effectively a placeholder, fragment never has any properties\r\n * @param {Node[]} children - child elements\r\n * @returns {DocumentFragment}\r\n */\r\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\r\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement } from './element';\nimport { current } from './hooks';\n\n/**\n * Renders a component and attaches it to the target DOM element\n * @param Component - function\n * @param target - DOM element to attach component to\n */\n\nlet timer;\n\nexport function render(Component, target) {\n  function workLoop() {\n    if (current.shouldReRender) {\n      current.shouldReRender = false;\n      target.replaceChildren(<Component />);\n    }\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(workLoop);\n  }\n  timer = requestAnimationFrame(workLoop);\n}\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\n\r\nexport default function Image({ value, url, width, imgClasses }) {\r\n  return (\r\n    <>\r\n      <img\r\n        class={imgClasses.join(' ')}\r\n        src={url}\r\n        alt={value}\r\n        width={value === 'All' ? '150' : width}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport hat from './img/hat.png';\nimport Image from '../Image/Image';\nimport styles from './styles.css';\n\nexport default function Error({ error, setState }) {\n  if (!error) {\n    return null;\n  }\n  return (\n    <>\n      <div class={styles.error}>\n        <Image value={'Sorting hat'} url={hat} width={'150'} imgClasses={['']} />\n        <h1 class={'title-main'} style=\"color: #2a221e\">\n          {error}\n        </h1>\n        <button\n          type=\"button\"\n          class={`btn ${styles['btn-reset']}`}\n          name=\"reload\"\n          onClick={event =>\n            setState({\n              state: {\n                house: null,\n                gender: null,\n                name: null,\n                hogwarts: null,\n                isAlive: null,\n              },\n              needReload: true,\n            })\n          }\n        >\n          Reload\n        </button>\n      </div>\n    </>\n  );\n}\n","import { current } from './hooks';\nimport { isFunction } from '../utils/utils';\n\n/**\n * @typedef {Object} Context\n * @property {*} Provider - Provider\n * @property {*} Consumer - Consumer\n */\n\n/**\n * Creates Context object with Provider and Consumer\n * @param {*} defaultValue - defaultValue of created context\n * @returns {Context} context object\n */\nexport function createContext(defaultValue) {\n  const context = {\n    value: defaultValue,\n    Provider: null,\n    Consumer: null,\n  };\n\n  let hasWarnedAboutUsingUseContext = false;\n\n  context.Provider = function ({ value = defaultValue, children }) {\n    if (!Object.is(context.value, value)) {\n      current.shouldReRender = true;\n      context.value = value;\n    }\n    return children;\n  };\n\n  context.Consumer = function ({ children }) {\n    const [renderFunction] = children;\n    if (!isFunction(renderFunction)) {\n      !hasWarnedAboutUsingUseContext &&\n        console.warn(\n          'Requires a function as a child.',\n          '\\n',\n          'The function receives the current context value and returns a node.',\n          '\\n',\n          'Or use useContext(Context) inside your component.',\n        );\n      hasWarnedAboutUsingUseContext = true;\n      return children;\n    }\n    return renderFunction(context.value);\n  };\n\n  return context;\n}\n","import { createContext } from './framework/context';\nimport { useContext } from './framework/hooks';\n\nexport const AppContext = createContext({});\nexport const useAppContext = () => useContext(AppContext);\n","export default function sliderMove(event) {\r\n  const slider = document.querySelector('#slider');\r\n  const sliderWidth = slider.offsetWidth;\r\n  const cardWidth = slider.querySelector(`div`).offsetWidth + 15;\r\n  const direction = +event.target.dataset.dir;\r\n  const cardsPerSlider = Math.round(sliderWidth / cardWidth);\r\n  const totalSliderWidth = cardWidth * slider.children.length;\r\n  const left = slider.style.left ? parseInt(slider.style.left, 10) : 0;\r\n  if (\r\n    Math.abs(left + direction * cardWidth) >\r\n    totalSliderWidth - (cardsPerSlider === 1 ? cardsPerSlider : cardsPerSlider - 1) * cardWidth\r\n  ) {\r\n    slider.style.left = '0px';\r\n  } else if (left + direction * cardWidth > 0) {\r\n    slider.style.left = `-${\r\n      (slider.children.length * cardWidth - cardsPerSlider * cardWidth) * direction\r\n    }px`;\r\n  } else {\r\n    slider.style.left = `${left + cardWidth * direction}px`;\r\n  }\r\n}\r\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { generateOccupation } from '../../utils/utils';\nimport Image from '../Image/Image';\nimport styles from './styles.css';\nimport { useAppContext } from '../../context';\n\nexport default function MainHeroCard() {\n  const { hero } = useAppContext();\n  if (!hero) {\n    return null;\n  }\n  return (\n    <>\n      <div class={`hero-card ${styles['hero-card__big']}`} id=\"hero-card__big\">\n        <Image\n          value={hero.name}\n          url={hero.image}\n          width={'150'}\n          imgClasses={['card-img', styles['card-img__big']]}\n        />\n        <div class={styles['hero-description']}>\n          <h2 class={`title card-title`}>{hero.name}</h2>\n          <p class={`text card-text`}>\n            <span class={'hero-name'}>{hero.name}</span> was bourn\n            <span class={'hero-birth-date'}>{hero.dateOfBirth}</span>.\n            <span class={'hero-occupation'}>{generateOccupation(hero)}</span>\n          </p>\n          <p class={`text card-text`}>\n            Has <span class={'hero-hair'}>{hero.hairColour}</span> hair,\n            <span class={'hero-eyes'}>{hero.eyeColour}</span> eyes. Patronus -\n            <span class={'hero-patronus'}>{hero.patronus}</span>\n          </p>\n          <p class={`text card-text`}>\n            Acted by\n            <span class={'hero-actor'}>{hero.actor}</span>.\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { generateOccupation } from '../../utils/utils';\nimport Image from '../Image/Image';\nimport styles from './styles.css';\n\nexport default function HeroCard({ hero = null }) {\n  if (!hero) {\n    return null;\n  }\n  return (\n    <>\n      <div class={`hero-card ${styles['hero-card__small']}`} data-id={hero.id}>\n        <Image\n          value={hero.name}\n          url={hero.image}\n          width={'150'}\n          imgClasses={['card-img', styles['card-img__small']]}\n        />\n        <div class={styles['hero-description']}>\n          <h3 class={`title card-title`}>{hero.name}</h3>\n          <p class={`text card-text`}>\n            <span class={'hero-name'}>{hero.name}</span> was bourn\n            <span class={'hero-birth-date'}>{hero.dateOfBirth}</span>.\n            <span class={'hero-occupation'}>{generateOccupation(hero)}</span>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport HeroCard from '../HeroCard/HeroCard';\r\nimport { useAppContext } from '../../context';\r\n\r\nexport default function HeroesList() {\r\n  const { currentHeroes } = useAppContext();\r\n  return (\r\n    <>\r\n      {currentHeroes.map(hero => (\r\n        <HeroCard hero={hero} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport MainHeroCard from '../MainHeroCard/MainHeroCard';\nimport HeroesList from '../HeroesList/HeroesList';\nimport { getHero } from '../../utils/utils';\nimport styles from './styles.css';\n\nfunction generateButtons(sliderHandler) {\n  const buttons = (\n    <>\n      <button\n        type=\"button\"\n        class={`btn ${styles['btn-list']} ${styles['btn-list__left']}`}\n        data-dir={'1'}\n        onclick={event => sliderHandler(event)}\n      >\n        &lsaquo;\n      </button>\n      <button\n        type=\"button\"\n        class={`btn ${styles['btn-list']} ${styles['btn-list__right']}`}\n        data-dir={'-1'}\n        onclick={event => sliderHandler(event)}\n      >\n        &rsaquo;\n      </button>\n    </>\n  );\n  return buttons;\n}\n\nfunction generateData(appState, heroesData, setHeroesState, setState, error) {\n  const clickHandler = event => {\n    const card = event.target.closest(`div.hero-card`);\n    let id = null;\n    if (!card) {\n      heroesData.heroId = null;\n      heroesData.hero = null;\n      setHeroesState(heroesData);\n      return;\n    }\n    id = +card.dataset.id;\n    const hero = getHero(heroesData.currentHeroes, id);\n    heroesData.heroId = id;\n    heroesData.hero = hero;\n    setHeroesState(heroesData);\n    appState.needReload = true;\n    setState(appState);\n  };\n  let data = null;\n  if (!error) {\n    data = (\n      <>\n        <MainHeroCard />\n        <div class={styles['hero-list__wrapper']}>\n          <div class={styles['hero-list__slider']} id=\"slider\" onclick={clickHandler}>\n            <HeroesList />\n          </div>\n        </div>\n      </>\n    );\n  }\n  return data;\n}\n\nexport { generateButtons, generateData };\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport Error from '../Error/Error';\nimport styles from './styles.css';\nimport { useAppContext } from '../../context';\nimport sliderHandler from '../../utils/slider';\nimport { generateButtons, generateData } from './helpers';\n\nexport default function Main({ setState, error, setHeroesState, appState }) {\n  const heroesData = useAppContext();\n  if (Object.keys(heroesData).length === 0) {\n    return null;\n  }\n  const buttons = generateButtons(sliderHandler);\n  const data = generateData(appState, heroesData, setHeroesState, setState, error);\n  return (\n    <>\n      <main class={styles.main}>\n        <div class={styles.results}>\n          {buttons}\n          <div class={styles['hero-list']}>\n            <Error error={error} setState={setState} />\n            {data}\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport Image from '../Image/Image';\nimport styles from './styles.css';\n\nexport default function Input({ state, imgNeed, appState }) {\n  return (\n    <>\n      {state['values'].map(value => (\n        <label class={`form-label ${state.labelClasses.map(_class => styles[_class]).join(' ')}`}>\n          <input\n            type={state.type}\n            class={`\n              ${\n                state.inputClasses.includes('visually-hidden') ? 'visually-hidden' : ''\n              } ${state.inputClasses.map(_class => styles[_class]).join(' ')}`}\n            value={state.placeholder ? appState[state.name] || '' : value}\n            name={state.name}\n            placeholder={state.placeholder || null}\n            checked={appState[state.name] === value}\n          />\n          {imgNeed === true ? (\n            <Image\n              value={value}\n              url={state['imgUrls'][value]}\n              width={'120px'}\n              imgClasses={[styles['img-checkbox']]}\n            />\n          ) : (\n            ''\n          )}\n          <span\n            class={`label ${state.spanClasses.includes('visually-hidden') ? 'visually-hidden' : ''}\n              ${state.spanClasses.map(_class => styles[_class]).join(' ')}\n            `}\n          >\n            {value.length > 0 ? value : 'None'}\n          </span>\n        </label>\n      ))}\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport styles from './styles.css';\n\nexport default function Legend({ state }) {\n  if (!state.legend) {\n    return null;\n  }\n  return <legend class={`legend ${styles[state.legendClasses]}`}>{state.legend}</legend>;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport Input from '../Input/Input';\nimport Legend from '../Legend/Legend';\nimport styles from './styles.css';\n\nexport default function Fieldset({ state, imgNeed, isFieldset, appState }) {\n  if (isFieldset) {\n    return (\n      <>\n        <fieldset class={`fieldset ${styles[state.fieldsetClasses]}`}>\n          <Legend state={state} />\n          <Input state={state} imgNeed={imgNeed} appState={appState.state} />\n        </fieldset>\n      </>\n    );\n  }\n  return <Input state={state} imgNeed={imgNeed} appState={appState.state} />;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport Fieldset from '../Fieldset/Fieldset';\nimport styles from './styles.css';\nimport { useAppContext } from '../../context';\n\nexport default function Form({\n  setState,\n  imgNeed = false,\n  isFieldset = false,\n  resetNeed = false,\n  appState,\n  formState,\n  setHeroesState,\n}) {\n  const formHandler = (event, appState, heroesData, setHeroesState) => {\n    const element = event.target.closest('input');\n    if (!element) {\n      return;\n    }\n    switch (element.value) {\n      case 'all':\n        appState.state[element.name] = null;\n        break;\n      default:\n        appState.state[element.name] = element.value;\n    }\n    appState.needReload = true;\n    heroesData.heroId = null;\n    heroesData.hero = null;\n    setHeroesState(heroesData);\n    return appState;\n  };\n  const heroesData = useAppContext();\n  return (\n    <form\n      class={`form ${styles[formState[0].formClasses]}`}\n      onChange={event => {\n        setState(formHandler(event, appState, heroesData, setHeroesState));\n      }}\n    >\n      {formState.map(_state => (\n        <Fieldset state={_state} imgNeed={imgNeed} isFieldset={isFieldset} appState={appState} />\n      ))}\n      {resetNeed ? (\n        <>\n          <button\n            type=\"reset\"\n            class={`btn btn-reset`}\n            name=\"reset\"\n            type=\"reset\"\n            onClick={event =>\n              setState({\n                state: {\n                  house: null,\n                  gender: null,\n                  name: null,\n                  hogwarts: null,\n                  isAlive: null,\n                },\n                needReload: true,\n              })\n            }\n          >\n            Reset\n          </button>\n        </>\n      ) : null}\n    </form>\n  );\n}\n","import allUrl from './img/all.png';\nimport gryffindorUrl from './img/gryffindor.png';\nimport hufflepuffUrl from './img/hufflepuff.png';\nimport ravenclawUrl from './img/ravenclaw.png';\nimport slytherinUrl from './img/slytherin.png';\n\nconst FORM_STATE = {\n  faculty: [\n    {\n      name: 'house',\n      values: ['Gryffindor', 'Hufflepuff', 'Ravenclaw', 'Slytherin', 'All'],\n      inputClasses: ['faculty-form__box', 'visually-hidden'],\n      imgClasses: ['img-checkbox'],\n      labelClasses: [],\n      legendClasses: '',\n      formClasses: 'faculty-form',\n      spanClasses: ['visually-hidden'],\n      imgUrls: {\n        Gryffindor: gryffindorUrl,\n        Hufflepuff: hufflepuffUrl,\n        Ravenclaw: ravenclawUrl,\n        Slytherin: slytherinUrl,\n        All: allUrl,\n      },\n      legend: '',\n      placeholder: '',\n      type: 'radio',\n    },\n  ],\n\n  filter: [\n    {\n      name: 'hogwarts',\n      values: ['Staff', 'Student', '', 'All'],\n      inputClasses: ['radio-input', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label'],\n      formClasses: 'filter-form',\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: 'Filter by Staff',\n      placeholder: '',\n      type: 'radio',\n    },\n\n    {\n      name: 'gender',\n      values: ['Male', 'Female', 'All'],\n      inputClasses: ['radio-input', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label'],\n      formClasses: 'filter-form',\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: 'Filter by Gender',\n      placeholder: '',\n      type: 'radio',\n    },\n\n    {\n      name: 'alive',\n      values: ['Alive', 'Dead', 'All'],\n      inputClasses: ['radio-input', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label'],\n      formClasses: 'filter-form',\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: 'Filter by Destiny',\n      placeholder: '',\n      type: 'radio',\n    },\n\n    {\n      name: 'name',\n      values: [''],\n      inputClasses: ['text-input'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label', 'form-label__text'],\n      formClasses: 'filter-form',\n      spanClasses: ['visually-hidden'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: '',\n      placeholder: \"Hero's name\",\n      type: 'search',\n    },\n  ],\n};\n\nexport default FORM_STATE;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport Form from '../Form/Form';\nimport FORM_STATE from '../../utils/buildState';\nimport styles from './styles.css';\n\nexport default function Aside({ setState, appState, setHeroesState }) {\n  return (\n    <aside class={styles.aside}>\n      <Form\n        setState={setState}\n        imgNeed={false}\n        isFieldset={true}\n        resetNeed={true}\n        appState={appState}\n        formState={FORM_STATE.filter}\n        setHeroesState={setHeroesState}\n      />\n    </aside>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport Form from '../Form/Form';\nimport styles from './styles.css';\nimport FORM_STATE from '../../utils/buildState';\n\nexport default function Header({ setState, appState, setHeroesState }) {\n  return (\n    <header class={styles.header}>\n      <div class={'wrapper'}>\n        <h1 class={`title title-main`}>Welcome to the magic World of Hogwarts</h1>\n        <Form\n          setState={setState}\n          imgNeed={true}\n          appState={appState}\n          formState={FORM_STATE.faculty}\n          setHeroesState={setHeroesState}\n        />\n      </div>\n    </header>\n  );\n}\n","export default function filterFromState(dataHeroes, state) {\n  const fileteredHeroes = Object.entries(state).reduce((initial, entry) => {\n    if (entry[1] !== null) {\n      const [key, value] = entry;\n      if (value === 'All') {\n        return initial;\n      }\n      const newdataHeroes = initial.filter(hero => {\n        switch (key) {\n          case 'name':\n            return hero[key].toLowerCase().includes(value.toLowerCase());\n          default:\n            return hero[key].toLowerCase() === value.toLowerCase();\n        }\n      });\n      return newdataHeroes;\n    }\n    return initial;\n  }, dataHeroes);\n  if (fileteredHeroes.length === 0) {\n    throw new Error(\n      'No magic heros matching current parameters. Please, reload or select other search parameters.',\n    );\n  }\n  return fileteredHeroes;\n}\n","class Hero {\r\n  constructor({\r\n    name,\r\n    dateOfBirth,\r\n    eyeColour,\r\n    hairColour,\r\n    gender,\r\n    hogwartsStaff,\r\n    hogwartsStudent,\r\n    house,\r\n    image,\r\n    patronus,\r\n    species,\r\n    alive,\r\n    actor,\r\n  }) {\r\n    this.name = name;\r\n    this.dateOfBirth = dateOfBirth;\r\n    this.eyeColour = eyeColour;\r\n    this.hairColour = hairColour;\r\n    this.gender = gender;\r\n    this.hogwartsStaff = hogwartsStaff;\r\n    this.hogwartsStudent = hogwartsStudent;\r\n    this.hogwarts = this.assignHoggwarts();\r\n    this.house = house;\r\n    this.patronus = patronus;\r\n    this.species = species;\r\n    this.image = `${image.slice(0, 4)}s${image.slice(4)}`;\r\n    this.alive = alive === true ? 'alive' : 'dead';\r\n    this.actor = actor;\r\n    this.id = null;\r\n  }\r\n\r\n  fromHogwarts = () => !!(this.hogwartsStaff || this.hogwartsStudent);\r\n\r\n  assignHoggwarts = () => {\r\n    switch (this.fromHogwarts()) {\r\n      case true:\r\n        switch (this.hogwartsStaff) {\r\n          case true:\r\n            return 'staff';\r\n          default:\r\n            return 'student';\r\n        }\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n}\r\n\r\nexport default Hero;\r\n","import Hero from '../utils/hero';\n\nexport default function constructHeroesList(dataHeroes) {\n  let id = 1;\n  const heroes = dataHeroes.map(item => {\n    const hero = new Hero(item);\n    hero.id = id;\n    id += 1;\n    return hero;\n  });\n  return heroes;\n}\n","import constructHeroesList from './getHroesList';\nconst URL_ADDR = 'https://hp-api.herokuapp.com/api/characters';\n\nexport default function getHeroesFromServer() {\n  return fetch(`${URL_ADDR}`)\n    .then(response => {\n      return response.json();\n    })\n    .then(dataHeroes => constructHeroesList(dataHeroes))\n    .catch(error => {\n      throw new Error('Cannot load the data. Please, reload');\n    });\n}\n","import { useEffect, useState } from './framework/hooks';\nimport filterFromState from './data/filterHeroes';\nimport getHeroesFromServer from './data/getData';\nimport { getHero } from './utils/utils';\n\nexport const useHeroes = () => {\n  const [heroesState, setHeroesState] = useState({\n    heroId: null,\n    hero: null,\n    heroes: [],\n    currentHeroes: [],\n  });\n  const [error, setError] = useState(null);\n  let [state, setState] = useState({\n    state: {\n      house: null,\n      gender: null,\n      name: null,\n      hogwarts: null,\n      isAlive: null,\n    },\n    needReload: true,\n  });\n  useEffect(() => {\n    if (heroesState.heroes.length === 0) {\n      getHeroesFromServer()\n        .then(heroesList => {\n          heroesState.heroes = heroesList;\n          heroesState.currentHeroes = heroesList;\n          const heroItemId = heroesState.heroId || null;\n          const heroItem = getHero(heroesList, heroItemId);\n          heroesState.heroId = heroItemId;\n          heroesState.hero = heroItem;\n          setHeroesState(heroesState);\n          state.needReload = false;\n          setState(state);\n        })\n        .catch(errorItem => {\n          state.needReload = false;\n          setError(errorItem);\n          setState(state);\n        });\n    } else {\n      if (state.needReload) {\n        try {\n          const heroesData = filterFromState(heroesState.heroes, state.state);\n          const heroItemId = heroesState.heroId || null;\n          const heroItem = getHero(heroesData, heroItemId);\n          state.needReload = false;\n          heroesState.heroId = heroItemId;\n          heroesState.hero = heroItem;\n          heroesState.currentHeroes = heroesData;\n          setHeroesState(heroesState);\n          setState(state);\n          setError(null);\n        } catch (errorItem) {\n          state.needReload = false;\n          setError(errorItem);\n          setState(state);\n        }\n      }\n    }\n  }, [heroesState, error, state]);\n\n  return {\n    state,\n    error,\n    heroesState,\n    setState,\n    setHeroesState,\n  };\n};\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport Main from '../Main/Main';\nimport Aside from '../Aside/Aside';\nimport Header from '../Header/Header';\nimport styles from './styles.css';\nimport { setUrl } from '../../utils/utils';\nimport { useHeroes } from '../../customHooks';\nimport { AppContext } from '../../context';\n\nexport default function App() {\n  const { state, error, heroesState, setState, setHeroesState } = useHeroes();\n  setUrl(state);\n  const template = (\n    <>\n      <AppContext.Provider value={heroesState}>\n        <Header setState={setState} appState={state} setHeroesState={setHeroesState} />\n        <div class={`wrapper ${styles['main-wrapper']}`}>\n          <Aside setState={setState} appState={state} setHeroesState={setHeroesState} />\n          <Main\n            error={error}\n            setState={setState}\n            appState={state}\n            setHeroesState={setHeroesState}\n          />\n        </div>\n      </AppContext.Provider>\n    </>\n  );\n  return template;\n}\n","import { render } from './framework/framework';\r\nimport App from './components/App/App';\r\n\r\nrender(App, document.querySelector('#root'));\r\n"]}