{"version":3,"sources":["js/hero.js","js/buildState.js","js/script.js"],"names":["Hero","constructor","name","dateOfBirth","eyeColour","hairColour","gender","hogwartsStaff","hogwartsStudent","house","image","patronus","species","alive","actor","fromHogwarts","hogwarts","assignHoggwarts","slice","id","FORM_STATE","faculty","values","inputClasses","imgClasses","labelClasses","formClasses","spanClasses","imgUrls","Gryffindor","gryffindorUrl","Hufflepuff","hufflepuffUrl","Ravenclaw","ravenclawUrl","Slytherin","slytherinUrl","All","allUrl","filter","fieldsetClasses","legendClasses","legend","random","URL_ADDR","getheroesFromServer","path","fetch","then","response","ok","Error","json","dataHeroes","window","constructHeroesList","catch","renderApp","error","heroes","map","item","hero","getRandomHero","Math","floor","length","getHero","find","filterFromState","fileteredHeroes","Object","entries","STATE","reduce","initial","entry","result","key","value","newdataHeroes","toLowerCase","includes","Promise","resolve","reject","resultHeroes","generateOccupation","occupationTemplate","renderHeroSmall","template","styles","renderHeroBig","renderHeroesList","forEach","heroTemplate","createImg","state","_class","join","createInputContainer","imgNeed","isFieldset","label","createInput","templateInput","createForm","formState","listener","resetNeed","isSearchNeed","resetFilterHandler","_state","createHeader","funcFaculty","header","wrapper","title","createAside","filterHandler","resetHandler","aside","createMain","heroList","cardHandler","main","results","createErrorTemplate","hat","img","reloadApp","createBodyMain","heroesList","formHandler","heroesListTemplate","formFilterHandler","document","querySelector","innerHTML","getPathOnFilter","updateUrl","url","URL","location","href","param","searchParam","searchParams","get","history","pushState","setUrl","search","delete","set","event","element","target","closest","finally","staff","isAlive","createApp","card","dataset","some"],"mappings":"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","file":"script.a8abd06f.js","sourceRoot":"..","sourcesContent":["class Hero {\n  constructor({\n    name,\n    dateOfBirth,\n    eyeColour,\n    hairColour,\n    gender,\n    hogwartsStaff,\n    hogwartsStudent,\n    house,\n    image,\n    patronus,\n    species,\n    alive,\n    actor,\n  }) {\n    this.name = name;\n    this.dateOfBirth = dateOfBirth;\n    this.eyeColour = eyeColour;\n    this.hairColour = hairColour;\n    this.gender = gender;\n    this.hogwartsStaff = hogwartsStaff;\n    this.hogwartsStudent = hogwartsStudent;\n    this.hogwarts = this.assignHoggwarts();\n    this.house = house;\n    this.patronus = patronus;\n    this.species = species;\n    this.image = `${image.slice(0, 4)}s${image.slice(4)}`;\n    this.alive = alive === true ? 'alive' : 'dead';\n    this.actor = actor;\n    this.id = null;\n  }\n\n  fromHogwarts = () => !!(this.hogwartsStaff || this.hogwartsStudent);\n\n  assignHoggwarts = () => {\n    switch (this.fromHogwarts()) {\n      case true:\n        switch (this.hogwartsStaff) {\n          case true:\n            return 'staff';\n          default:\n            return 'student';\n        }\n      default:\n        return '';\n    }\n  };\n}\n\nexport default Hero;\n","import allUrl from '../img/all.png';\nimport gryffindorUrl from '../img/gryffindor.png';\nimport hufflepuffUrl from '../img/hufflepuff.png';\nimport ravenclawUrl from '../img/ravenclaw.png';\nimport slytherinUrl from '../img/slytherin.png';\n\nconst FORM_STATE = {\n  faculty: [\n    {\n      name: 'house',\n      values: ['Gryffindor', 'Hufflepuff', 'Ravenclaw', 'Slytherin', 'All'],\n      inputClasses: ['faculty-form__box', 'visually-hidden'],\n      imgClasses: ['img-checkbox'],\n      labelClasses: [],\n      formClasses: ['form', 'faculty-form'],\n      spanClasses: ['visually-hidden'],\n      imgUrls: {\n        Gryffindor: gryffindorUrl,\n        Hufflepuff: hufflepuffUrl,\n        Ravenclaw: ravenclawUrl,\n        Slytherin: slytherinUrl,\n        All: allUrl,\n      },\n    },\n  ],\n\n  filter: [\n    {\n      name: 'hogwarts',\n      values: ['Staff', 'Student', '', 'All'],\n      inputClasses: ['input radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: ['fieldset', 'filter-form__fieldset'],\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Filter by Staff',\n    },\n\n    {\n      name: 'gender',\n      values: ['Male', 'Female', 'All'],\n      inputClasses: ['input radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: ['fieldset', 'filter-form__fieldset'],\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Filter by Gender',\n    },\n\n    {\n      name: 'alive',\n      values: ['Alive', 'Dead', 'All'],\n      inputClasses: ['input radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: ['fieldset', 'filter-form__fieldset'],\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Filter by Destiny',\n    },\n  ],\n\n  random: [\n    {\n      name: 'random',\n      values: ['Get random heroes'],\n      inputClasses: ['input radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: ['fieldset', 'filter-form__fieldset'],\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Gnerate random Heroes',\n    },\n  ],\n};\n\nexport { FORM_STATE };\n","import Hero from './hero.js';\nimport { FORM_STATE } from './buildState.js';\nimport styles from '../css/style.css';\nimport hat from '../img/hat.png';\n// const { Url } = require('url');\n\nconst URL_ADDR = 'https://hp-api.herokuapp.com/api/characters';\nwindow.STATE = {\n  house: null,\n  gender: null,\n  name: null,\n  hogwarts: null,\n  isAlive: null,\n};\nwindow.styles = styles;\n\nfunction getheroesFromServer(path) {\n  try {\n    return fetch(`${URL_ADDR}/${path}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Cannot load the data. Please, reload');\n        }\n        return response.json();\n      })\n      .then(dataHeroes => window.constructHeroesList(dataHeroes))\n      .catch(window.renderApp([], null, 'Cannot load the data. Please, reload'));\n  } catch (error) {\n    window.renderApp([], null, error);\n  }\n}\n\nwindow.getheroesFromServer = getheroesFromServer;\n\nfunction constructHeroesList(dataHeroes) {\n  let id = 1;\n  const heroes = dataHeroes.map(item => {\n    const hero = new Hero(item);\n    hero.id = id;\n    id += 1;\n    return hero;\n  });\n  return heroes;\n}\n\nwindow.constructHeroesList = constructHeroesList;\n\nfunction getRandomHero(dataHeroes) {\n  const index = Math.floor(Math.random() * dataHeroes.length);\n  return dataHeroes[index];\n}\n\nwindow.getRandomHero = getRandomHero;\n\nfunction getHero(dataHeroes, id) {\n  const hero = dataHeroes.find(item => item.id === id);\n  return hero;\n}\n\nwindow.getHero = getHero;\n\nfunction filterFromState(dataHeroes) {\n  const fileteredHeroes = Object.entries(window.STATE).reduce(\n    (initial, entry) =>\n      initial.then(result => {\n        if (entry[1] !== null) {\n          const [key, value] = entry;\n          if (value === 'All') {\n            return result;\n          }\n          const newdataHeroes = result.filter(hero => {\n            switch (key) {\n              case 'name':\n                return hero[key].toLowerCase().includes(value.toLowerCase());\n              default:\n                return hero[key].toLowerCase() === value.toLowerCase();\n            }\n          });\n          return new Promise((resolve, reject) => resolve(newdataHeroes));\n        }\n        return new Promise((resolve, reject) => resolve(result));\n      }),\n    Promise.resolve(dataHeroes),\n  );\n  return fileteredHeroes.then(resultHeroes => resultHeroes);\n}\n\nwindow.filterFromState = filterFromState;\n\nfunction generateOccupation(hero) {\n  let occupationTemplate = '';\n  if (hero.fromHogwarts()) {\n    if (hero.hogwartsStaff) {\n      occupationTemplate += 'Professor of ';\n    } else {\n      occupationTemplate += 'Student of ';\n    }\n  } else {\n    occupationTemplate += 'Not from ';\n  }\n  occupationTemplate += 'Hogwarts';\n  if (hero.house) {\n    occupationTemplate += `, ${hero.house}`;\n  }\n  occupationTemplate += '.';\n  return occupationTemplate;\n}\n\nwindow.generateOccupation = generateOccupation;\n\nfunction renderHeroSmall(hero) {\n  if (!hero) {\n    return null;\n  }\n  const template = `\n  <div class=\"${window.styles['hero-card']} ${window.styles['hero-card__small']}\" data-id=\"${\n    hero.id\n  }\" id=\"hero-card__small\">\n  <img src=\"${hero.image}\" alt=\"Photo of ${hero.name}\" width=\"80\" class=\"${window.styles['img']} ${\n    window.styles['card-img']\n  }  ${window.styles['card-img__small']}\" />\n  <div class=\"${window.styles['hero-description']}\">\n    <h3 class=\"${window.styles['title']} ${window.styles['card-title']}\">${hero.name}</h3>\n    <p class=\"${window.styles['text']} ${window.styles['card-text']}\">\n      <span class=\"${window.styles['hero-name']}\">${hero.name}</span> was bourn\n      <span class=\"${window.styles['hero-birth-date']}\">${hero.dateOfBirth}</span>.\n      <span class=\"${window.styles['hero-occupation']}\">${window.generateOccupation(hero)}</span>\n    </p>\n  </div>\n</div>`;\n  return template;\n}\n\nwindow.renderHeroSmall = renderHeroSmall;\n\nfunction renderHeroBig(hero) {\n  if (!hero) {\n    return null;\n  }\n  const template = `\n  <div class=\"${window.styles['hero-card']} ${\n    window.styles['hero-card__big']\n  }\" id = \"hero-card__big\">\n    <img src=\"${hero.image}\" alt=\"Photo of ${hero.name}\" width=\"150\" class=\"${\n    window.styles['img']\n  } ${window.styles['card-img']} ${window.styles['card-img__big']}\" />\n    <div class=\"${window.styles['hero-description']}\">\n      <h2 class=\"${window.styles['title']} ${window.styles['card-title']}\">${hero.name}</h2>\n      <p class=\"${window.styles['text']} ${window.styles['card-text']}\">\n      <span class=\"${window.styles['hero-name']}\">${hero.name}</span> was bourn\n      <span class=\"${window.styles['hero-birth-date']}\">${hero.dateOfBirth}</span>.\n      <span class=\"${window.styles['hero-occupation']}\">${window.generateOccupation(hero)}</span>\n      </p>\n      <p class=\"${window.styles['text']} ${window.styles['card-text']}\">\n        Has <span class=\"${window.styles['hero-hair']}\">${hero.hairColour}</span> hair,\n        <span class=\"${window.styles['hero-eyes']}\">${hero.eyeColour}</span> eyes. Patronus -\n        <span class=\"${window.styles['hero-patronus']}\">${hero.patronus}</span>\n      </p>\n      <p class=\"${window.styles['text']} ${window.styles['card-text']}\">\n        Acted by\n        <span class=\"${window.styles['hero-actor']}\">${hero.actor}</span>.\n      </p>\n    </div>\n  </div>`;\n  return template;\n}\n\nwindow.renderHeroBig = renderHeroBig;\n\nfunction renderHeroesList(heroes) {\n  let template = '';\n  heroes.forEach(hero => {\n    const heroTemplate = window.renderHeroSmall(hero);\n    if (heroTemplate) {\n      template += heroTemplate;\n    }\n  });\n  return template;\n}\n\nwindow.renderHeroesList = renderHeroesList;\n\nfunction createImg(value, state) {\n  return `<img class=\"${state.imgClasses.map(_class => window.styles[_class] || _class).join(' ')}\"\n  src=${state['imgUrls'][value]} alt=${value} width=${value === 'All' ? '150' : '120'}/>`;\n}\n\nwindow.createImg = createImg;\n\nfunction createInputContainer(state, imgNeed, isFieldset) {\n  const label = window.createInput(state, imgNeed);\n  if (isFieldset) {\n    return `<fieldset class=\"${state.fieldsetClasses\n      .map(_class => window.styles[_class] || _class)\n      .join(' ')}\">\n      <legend class=\"${state.legendClasses\n        .map(_class => window.styles[_class] || _class)\n        .join(' ')}\">${state.legend}</legend>\n        ${label}\n    </fieldset>`;\n  }\n  return label;\n}\n\nwindow.createInputContainer = createInputContainer;\n\nfunction createInput(state, imgNeed) {\n  let templateInput = ``;\n  state['values'].forEach(value => {\n    const label = `<label class=\"${state.labelClasses\n      .map(_class => window.styles[_class] || _class)\n      .join(' ')}\">\n      <input type=\"radio\" class=\"${state.inputClasses\n        .map(_class => window.styles[_class] || _class)\n        .join(' ')}\" name=\"${state.name}\" value=${value}></input>\n      ${imgNeed === true ? window.createImg(value, state) : ''}\n      <span class=\"${state.spanClasses.map(_class => window.styles[_class] || _class).join(' ')}\">${\n      value.length > 0 ? value : 'None'\n    }</span>\n    </label>\n    `;\n    templateInput += label;\n  });\n  return templateInput;\n}\n\nwindow.createInput = createInput;\n\nfunction createForm(\n  formState,\n  listener,\n  imgNeed = false,\n  isFieldset = false,\n  resetNeed = false,\n  isSearchNeed,\n  resetFilterHandler = null,\n) {\n  let template = `\n  <form class=\"${formState[0].formClasses\n    .map(_class => window.styles[_class] || _class)\n    .join(' ')}\" onchange=\"(${listener})(event);\">`;\n  for (let _state of formState) {\n    template += window.createInputContainer(_state, imgNeed, isFieldset);\n  }\n\n  if (isSearchNeed) {\n    template += `\n    <fieldset class=\"${['fieldset', 'filter-form__fieldset']\n      .map(_class => window.styles[_class] || _class)\n      .join(' ')}\">\n    <label class=\"${['form-label', 'filter-form__label', 'form-label__text']\n      .map(_class => window.styles[_class] || _class)\n      .join(' ')}\">\n      <input\n        type=\"search\"\n        name=\"name\"\n        class=\"${['input', 'text-input', 'filter-form-input__text']\n          .map(_class => window.styles[_class] || _class)\n          .join(' ')}\"\n        placeholder=\"Hero's name\" onchange=\"(event.istopPropagation(); ${listener})(event);\"\n      />\n      <span class=\"${window.styles['visually-hidden']}\">Search</span>\n    </label>\n  </fieldset>\n    `;\n  }\n  if (resetNeed) {\n    template += `\n        <button type=\"reset\" class=\"${['btn', 'btn-reset']\n          .map(_class => window.styles[_class] || _class)\n          .join(\n            ' ',\n          )}\" name=\"reset\" type=\"reset\" onclick=\"(${resetFilterHandler})();\">Reset</button>`;\n  }\n  template += `</form>`;\n  return template;\n}\n\nwindow.createForm = createForm;\n\nfunction createHeader(funcFaculty) {\n  return `\n  <header class=\"${window.styles.header}\">\n    <div class=\"${window.styles.wrapper}\">\n      <h1 class \"${window.styles.title} ${\n    window.styles['title-main'] || 'title-main'\n  }\">Welcome to the magic World of Hogwarts</h1>\n      ${window.createForm(FORM_STATE.faculty, funcFaculty, true)}\n    </div>\n  </header>\n  `;\n}\n\nwindow.createHeader = createHeader;\n\nfunction createAside(filterHandler, resetHandler) {\n  return `\n  <aside class=\"${window.styles.aside}\">\n  ${window.createForm(FORM_STATE.filter, filterHandler, false, true, true, true, resetHandler)}\n  </aside>\n  `;\n}\n\nwindow.createAside = createAside;\n\nfunction createMain(hero, heroList, cardHandler, error) {\n  let template = `\n  <main class=\"${window.styles.main}\">\n    <div class=\"${window.styles.results}\">\n      <div class=\"${window.styles['hero-list']}\">\n          ${hero ? hero : window.createErrorTemplate(error) || ''}\n          <div class=\"${window.styles['hero-list__wrapper']}\">\n            <div class=\"${window.styles['hero-list__slider']}\" onclick=\"(${cardHandler})(event);\">\n              ${heroList ? heroList : ''}\n            </div>\n          </div>\n      </div>\n    </div>\n  </main>\n  `;\n  return template;\n}\n\nwindow.createMain = createMain;\n\nfunction createErrorTemplate(error) {\n  return `\n  <div class=\"${window.styles.error}\">\n  <img src=\"${hat}\" alt=\"Sorting hat\" class=\"${window.styles.img} ${window.styles['img-hat']}\"/>\n  <h1 class \"${window.styles.title} ${\n    window.styles['title-main'] || 'title-main'\n  }\" style=\"color: #2a221e\">${error}</h1>\n  <button tyle=\"button\" class=\"${['btn', 'btn-reset']\n    .map(_class => window.styles[_class] || _class)\n    .join(' ')}\" name=\"reload\" onclick='(${reloadApp})();'>Reload</button>\n  </div>\n  `;\n}\n\nwindow.createErrorTemplate = createErrorTemplate;\n\nfunction createBodyMain(hero, heroesList, formHandler, cardHandler, resetHandler, error) {\n  return `\n  <div class = \"${window.styles.wrapper} ${window.styles['main-wrapper'] || 'main-wrapper'}\">\n    ${window.createAside(formHandler, resetHandler)}\n    ${window.createMain(hero, heroesList, cardHandler, error)}\n  </div>\n  `;\n}\n\nwindow.createBodyMain = createBodyMain;\n\nfunction renderApp(dataHeroes, id, error) {\n  let hero = null;\n  let heroesListTemplate = '';\n  let heroTemplate = null;\n  try {\n    if (dataHeroes.length > 0) {\n      heroesListTemplate += window.renderHeroesList(dataHeroes);\n    }\n    if (id != null) {\n      hero = window.getHero(dataHeroes, id);\n    } else {\n      hero = window.getRandomHero(dataHeroes);\n    }\n    heroTemplate = window.renderHeroBig(hero);\n  } catch {\n    heroesListTemplate = '';\n  }\n  if (heroTemplate === undefined || heroTemplate === null) {\n    heroTemplate = '';\n  }\n  let template = window.createHeader(formFilterHandler);\n  template += window.createBodyMain(\n    heroTemplate,\n    heroesListTemplate,\n    formFilterHandler,\n    cardHandler,\n    resetFilterHandler,\n    error || 'Cannot load the data. Please, reload',\n  );\n  document.querySelector('.container').innerHTML = template;\n}\n\nwindow.renderApp = renderApp;\n\nfunction getPathOnFilter() {\n  if (window.STATE.house) {\n    switch (window.STATE.house) {\n      case 'All':\n        return '';\n      default:\n        return `house/${window.STATE.house}`;\n    }\n  } else {\n    if (window.STATE.hogwarts) {\n      switch (window.STATE.hogwarts) {\n        case 'Student':\n          return `${window.STATE.hogwarts.toLowerCase()}s`;\n        case 'Staff':\n          return `${window.STATE.hogwarts.toLowerCase()}`;\n        default:\n          return '';\n      }\n    }\n  }\n  return '';\n}\n\nwindow.getPathOnFilter = getPathOnFilter;\n\nfunction updateUrl() {\n  const url = new URL(window.location.href);\n  for (let param in window.STATE) {\n    let searchParam = url.searchParams.get(param);\n    try {\n      window.STATE[param] = searchParam;\n    } catch {\n      window.STATE[param] = null;\n    }\n  }\n  window.history.pushState({}, '', url);\n}\n\nwindow.updateUrl = updateUrl;\n\nfunction setUrl() {\n  const url = new URL(window.location.href);\n  url.search = '';\n  for (let param in window.STATE) {\n    if (window.STATE[param] === null) {\n      url.searchParams.delete(param);\n    } else {\n      url.searchParams.set(param, window.STATE[param]);\n    }\n  }\n  window.history.pushState({}, '', url);\n}\n\nwindow.setUrl = setUrl;\n\nfunction formFilterHandler(event) {\n  const element = event.target.closest('input');\n  if (!element) {\n    return;\n  }\n  switch (element.value) {\n    case 'all':\n      window.STATE[element.name] = null;\n      break;\n    default:\n      window.STATE[element.name] = element.value;\n  }\n  window.setUrl();\n  window\n    .getheroesFromServer(window.getPathOnFilter())\n    .then(dataHeroes => window.filterFromState(dataHeroes))\n    .then(dataHeroes => {\n      if (dataHeroes.length === 0) {\n        throw new Error('No one magic hero match the parameters. Please, select something else.');\n      }\n      window.renderApp(dataHeroes);\n    })\n    .catch(error => window.renderApp([], null, error))\n    .finally();\n}\n\nfunction resetFilterHandler() {\n  window.STATE = {\n    house: null,\n    gender: null,\n    name: null,\n    staff: null,\n    isAlive: null,\n  };\n  window.setUrl();\n  window.getheroesFromServer('').then(dataHeroes => {\n    window.renderApp(dataHeroes, null);\n  });\n}\n\nwindow.resetFilterHandler = resetFilterHandler;\n\nfunction createApp(id = null) {\n  window.updateUrl();\n  window\n    .getheroesFromServer('')\n    .then(heroes => window.filterFromState(heroes))\n    .then(heroes => window.renderApp(heroes, id));\n}\n\nwindow.createApp = createApp;\n\nfunction reloadApp() {\n  window.resetFilterHandler();\n}\n\nwindow.reloadApp = reloadApp;\n\nfunction cardHandler(event) {\n  const card = event.target.closest(`div.${window.styles['hero-card__small']}`);\n  let id = false;\n  if (!card) {\n    return;\n  }\n  id = +card.dataset.id;\n  if (Object.values(window.STATE).some(value => !!value)) {\n    random = null;\n  }\n  window.createApp(id);\n}\n\ncreateApp();\n"]}