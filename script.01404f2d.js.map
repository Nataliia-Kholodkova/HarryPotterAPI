{"version":3,"sources":["js/utils.js","framework/hooks.js","framework/element.js","framework/framework.js","components/Image/Image.js","components/Error/Error.js","components/MainHeroCard/MainHeroCard.js","components/HeroCard/HeroCard.js","components/HeroesList/HeroesList.js","components/Main/Main.js","components/Input/Input.js","components/Legend/Legend.js","components/Fieldset/Fieldset.js","components/Form/Form.js","js/buildState.js","components/Aside/Aside.js","components/Header/Header.js","handlers/slider.js","data/filterHeroes.js","js/hero.js","data/getHroesList.js","data/getData.js","customHooks.js","components/App/App.js","script.js"],"names":["generateOccupation","hero","occupationTemplate","fromHogwarts","hogwartsStaff","house","getHero","dataHeroes","id","find","item","Math","floor","random","length","setUrl","state","url","URL","window","location","href","search","param","searchParams","delete","set","history","pushState","updateStateFromUrl","setState","searchParam","get","isFunction","func","current","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","queue","forEach","action","push","useEffect","effect","deps","oldDeps","undefined","hasDepsChanged","unmount","removeEventListener","addEventListener","prevDeps","nextDeps","some","dep","index","useContext","Context","value","createElement","element","DocumentFragment","document","Object","entries","name","startsWith","toLowerCase","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","timer","render","Component","target","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","Image","width","imgClasses","join","Error","reloadHandler","styles","hat","event","MainHeroCard","image","dateOfBirth","hairColour","eyeColour","patronus","actor","HeroCard","HeroesList","heroes","map","Main","heroList","idHandler","heroHandler","errorHandler","sliderHandler","setNeedReload","buttons","main","results","card","closest","dataset","Input","imgNeed","stateApp","labelClasses","_class","type","inputClasses","placeholder","spanClasses","Legend","legend","legendClasses","Fieldset","isFieldset","fieldsetClasses","Form","formState","listener","resetNeed","resetFilterHandler","formClasses","_state","FORM_STATE","faculty","values","imgUrls","Gryffindor","gryffindorUrl","Hufflepuff","hufflepuffUrl","Ravenclaw","ravenclawUrl","Slytherin","slytherinUrl","All","allUrl","filter","Aside","filterHandler","resetHandler","aside","Header","funcFaculty","setStateChanged","header","sliderMove","slider","querySelector","sliderWidth","offsetWidth","cardWidth","direction","dir","cardsPerSlider","round","totalSliderWidth","left","style","parseInt","abs","filterFromState","fileteredHeroes","reduce","entry","key","Hero","constructor","gender","hogwartsStudent","species","alive","hogwarts","assignHoggwarts","slice","constructHeroesList","URL_ADDR","getHeroesFromServer","fetch","then","response","json","catch","useHeroes","setHeroes","setError","heroId","setHeroId","setHero","needReload","isAlive","heroesList","heroesData","heroItemId","heroItem","errorItem","resetState","App","template"],"mappings":"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","file":"script.01404f2d.js","sourceRoot":"..\\src","sourcesContent":["import { useState } from '../framework/hooks';\r\n\r\nfunction generateOccupation(hero) {\r\n  let occupationTemplate = '';\r\n  if (hero.fromHogwarts()) {\r\n    if (hero.hogwartsStaff) {\r\n      occupationTemplate += 'Professor of ';\r\n    } else {\r\n      occupationTemplate += 'Student of ';\r\n    }\r\n  } else {\r\n    occupationTemplate += 'Not from ';\r\n  }\r\n  occupationTemplate += 'Hogwarts';\r\n  if (hero.house) {\r\n    occupationTemplate += `, ${hero.house}`;\r\n  }\r\n  occupationTemplate += '.';\r\n  return occupationTemplate;\r\n}\r\n\r\nfunction getHero(dataHeroes, id) {\r\n  const hero = id\r\n    ? dataHeroes.find(item => item.id === id)\r\n    : dataHeroes[Math.floor(Math.random() * dataHeroes.length)];\r\n  return hero;\r\n}\r\n\r\nfunction setUrl(state) {\r\n  const url = new URL(window.location.href);\r\n  url.search = '';\r\n  for (let param in state) {\r\n    if (state[param] === null || state[param] === '') {\r\n      url.searchParams.delete(param);\r\n    } else {\r\n      url.searchParams.set(param, state[param]);\r\n    }\r\n  }\r\n  window.history.pushState({}, '', url);\r\n}\r\n\r\nfunction updateStateFromUrl(state, setState) {\r\n  const url = new URL(window.location.href);\r\n  for (let param in state) {\r\n    let searchParam = url.searchParams.get(param);\r\n    try {\r\n      state[param] = searchParam;\r\n    } catch {\r\n      state[param] = null;\r\n    }\r\n  }\r\n  window.history.pushState({}, '', url);\r\n  setState(state);\r\n}\r\n\r\nconst isFunction = func => typeof func === 'function';\r\n\r\nexport { getHero, generateOccupation, setUrl, updateStateFromUrl, isFunction };\r\n","import { isFunction } from '../js/utils';\r\n\r\nexport const current = {\r\n  shouldReRender: true,\r\n  wipComponent: null,\r\n  hookIndex: null,\r\n};\r\n\r\nexport function createFunctionElement(tag, props, children) {\r\n  current.wipComponent = tag;\r\n  current.hookIndex = 0;\r\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\r\n\r\n  return tag({ ...props, children }, children);\r\n}\r\n\r\nexport function useState(initial) {\r\n  const { wipComponent, hookIndex } = current;\r\n  const oldHook = wipComponent.hooks[hookIndex];\r\n  const hook = {\r\n    state: oldHook ? oldHook.state : initial,\r\n    queue: [],\r\n  };\r\n\r\n  const actions = oldHook ? oldHook.queue : [];\r\n\r\n  actions.forEach(action => {\r\n    hook.state = isFunction(action) ? action(hook.state) : action;\r\n  });\r\n\r\n  const setState = action => {\r\n    current.shouldReRender = true;\r\n    hook.queue.push(action);\r\n  };\r\n\r\n  wipComponent.hooks[hookIndex] = hook;\r\n  current.hookIndex++;\r\n  return [hook.state, setState];\r\n}\r\n\r\nexport function useEffect(effect, deps) {\r\n  const { wipComponent, hookIndex } = current;\r\n  const oldHook = wipComponent.hooks[hookIndex];\r\n  const oldDeps = oldHook ? oldHook.deps : undefined;\r\n\r\n  const hasChanged = hasDepsChanged(oldDeps, deps);\r\n\r\n  if (!hasChanged) return;\r\n\r\n  if (oldHook && oldHook.unmount) {\r\n    window.removeEventListener('beforeunload', oldHook.unmount);\r\n  }\r\n\r\n  wipComponent.hooks[hookIndex] = {\r\n    unmount: effect(),\r\n    deps,\r\n  };\r\n\r\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\r\n\r\n  current.hookIndex++;\r\n}\r\n\r\nconst hasDepsChanged = (prevDeps, nextDeps) =>\r\n  !prevDeps ||\r\n  !nextDeps ||\r\n  prevDeps.length !== nextDeps.length ||\r\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\r\n\r\nexport const useContext = Context => Context.value;\r\n","/**\r\n * Creates DOM Node. Implements jsx-parser's createElement API\r\n * @param {string|Function} tag - HTML tag as string or Component function\r\n * @param {object} props - element properties as parsed by jsx-parser\r\n * @param {Node[]} children - child elements\r\n * @returns {DocumentFragment|Element}\r\n */\r\nimport { createFunctionElement } from './hooks';\r\n\r\nexport const createElement = (tag, props, ...children) => {\r\n  if (typeof tag === 'function') {\r\n    /*\r\n        Passing children as the 2nd argument is required as jsx transformer puts component functions\r\n        and regular tags in wrapper functions that expect children as the 2nd param\r\n       */\r\n    return createFunctionElement(tag, props, children);\r\n  }\r\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\r\n  Object.entries(props || {}).forEach(([name, value]) => {\r\n    if (name.startsWith('on') && name.toLowerCase() in window) {\r\n      element.addEventListener(\r\n        name.toLowerCase().substr(2),\r\n        /** @type {Function} */\r\n        value,\r\n      );\r\n    } else {\r\n      try {\r\n        if (!(element instanceof DocumentFragment)) {\r\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\r\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\r\n          if (['disabled', 'checked'].includes(name) && !value) {\r\n            element.removeAttribute(name);\r\n          } else {\r\n            element.setAttribute(name, value);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error('createElement caught', e, 'on', element);\r\n      }\r\n    }\r\n  });\r\n\r\n  children.forEach(child => appendChild(element, child));\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Appends child elements from an unbound array of children, recursively\r\n * @param {Node} parent\r\n * @param {Node|[Node]} child\r\n */\r\nconst appendChild = (parent, child) => {\r\n  if (Array.isArray(child)) {\r\n    child.forEach(subChild => appendChild(parent, subChild));\r\n  } else {\r\n    // Skip null and undefined\r\n    if (child != null) {\r\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Creates Fragment. Implements jsx-parser's createFragment API\r\n * @param {object} props - effectively a placeholder, fragment never has any properties\r\n * @param {Node[]} children - child elements\r\n * @returns {DocumentFragment}\r\n */\r\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\r\n","/** @jsx createElement */\r\n/*** @jsxFrag createFragment */\r\nimport { createElement } from './element';\r\nimport { current } from './hooks';\r\n\r\n/**\r\n * Renders a component and attaches it to the target DOM element\r\n * @param Component - function\r\n * @param target - DOM element to attach component to\r\n */\r\n\r\nlet timer;\r\n\r\nexport function render(Component, target) {\r\n  function workLoop() {\r\n    if (current.shouldReRender) {\r\n      current.shouldReRender = false;\r\n      target.replaceChildren(<Component />);\r\n    }\r\n    cancelAnimationFrame(timer);\r\n    timer = requestAnimationFrame(workLoop);\r\n  }\r\n  timer = requestAnimationFrame(workLoop);\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\n\r\nexport default function Image({ value, url, width, imgClasses }) {\r\n  return (\r\n    <>\r\n      <img\r\n        class={imgClasses.join(' ')}\r\n        src={url}\r\n        alt={value}\r\n        width={value === 'All' ? '150' : width}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport hat from './img/hat.png';\nimport Image from '../Image/Image';\nimport styles from './styles.css';\n\nexport default function Error({ error, reloadHandler }) {\n  if (!error) {\n    return null;\n  }\n  return (\n    <>\n      <div class={styles.error}>\n        <Image value={'Sorting hat'} url={hat} width={'150'} imgClasses={['']} />\n        <h1 class={'title-main'} style=\"color: #2a221e\">\n          {error}\n        </h1>\n        <button\n          type=\"button\"\n          class={`btn ${styles['btn-reset']}`}\n          name=\"reload\"\n          onClick={event => reloadHandler(event)}\n        >\n          Reload\n        </button>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { generateOccupation } from '../../js/utils';\nimport Image from '../Image/Image';\nimport styles from './styles.css';\n\nexport default function MainHeroCard({ hero = null }) {\n  if (!hero) {\n    return null;\n  }\n  return (\n    <>\n      <div class={`hero-card ${styles['hero-card__big']}`} id=\"hero-card__big\">\n        <Image\n          value={hero.name}\n          url={hero.image}\n          width={'150'}\n          imgClasses={['card-img', styles['card-img__big']]}\n        />\n        <div class={styles['hero-description']}>\n          <h2 class={`title card-title`}>{hero.name}</h2>\n          <p class={`text card-text`}>\n            <span class={'hero-name'}>{hero.name}</span> was bourn\n            <span class={'hero-birth-date'}>{hero.dateOfBirth}</span>.\n            <span class={'hero-occupation'}>{generateOccupation(hero)}</span>\n          </p>\n          <p class={`text card-text`}>\n            Has <span class={'hero-hair'}>{hero.hairColour}</span> hair,\n            <span class={'hero-eyes'}>{hero.eyeColour}</span> eyes. Patronus -\n            <span class={'hero-patronus'}>{hero.patronus}</span>\n          </p>\n          <p class={`text card-text`}>\n            Acted by\n            <span class={'hero-actor'}>{hero.actor}</span>.\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { generateOccupation } from '../../js/utils';\nimport Image from '../Image/Image';\nimport styles from './styles.css';\n\nexport default function HeroCard({ hero = null }) {\n  if (!hero) {\n    return null;\n  }\n  return (\n    <>\n      <div class={`hero-card ${styles['hero-card__small']}`} data-id={hero.id}>\n        <Image\n          value={hero.name}\n          url={hero.image}\n          width={'150'}\n          imgClasses={['card-img', styles['card-img__small']]}\n        />\n        <div class={styles['hero-description']}>\n          <h3 class={`title card-title`}>{hero.name}</h3>\n          <p class={`text card-text`}>\n            <span class={'hero-name'}>{hero.name}</span> was bourn\n            <span class={'hero-birth-date'}>{hero.dateOfBirth}</span>.\n            <span class={'hero-occupation'}>{generateOccupation(hero)}</span>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport HeroCard from '../HeroCard/HeroCard';\r\n\r\nexport default function HeroesList({ heroes }) {\r\n  return (\r\n    <>\r\n      {heroes.map(hero => (\r\n        <HeroCard hero={hero} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport Error from '../Error/Error';\r\nimport MainHeroCard from '../MainHeroCard/MainHeroCard';\r\nimport HeroesList from '../HeroesList/HeroesList';\r\nimport { getHero } from '../../js/utils';\r\nimport styles from './styles.css';\r\n\r\nexport default function Main({\r\n  hero,\r\n  heroList,\r\n  idHandler,\r\n  heroHandler,\r\n  error,\r\n  errorHandler,\r\n  sliderHandler,\r\n  state,\r\n  setNeedReload,\r\n}) {\r\n  const buttons = (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        class={`btn ${styles['btn-list']} ${styles['btn-list__left']}`}\r\n        data-dir={'1'}\r\n        onclick={event => sliderHandler(event)}\r\n      >\r\n        &lsaquo;\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class={`btn ${styles['btn-list']} ${styles['btn-list__right']}`}\r\n        data-dir={'-1'}\r\n        onclick={event => sliderHandler(event)}\r\n      >\r\n        &rsaquo;\r\n      </button>\r\n    </>\r\n  );\r\n  return (\r\n    <>\r\n      <main class={styles.main}>\r\n        <div class={styles.results}>\r\n          {buttons}\r\n          <div class={styles['hero-list']}>\r\n            <Error error={error} reloadHandler={errorHandler} />\r\n            <MainHeroCard hero={hero} />\r\n            <div class={styles['hero-list__wrapper']}>\r\n              <div\r\n                class={styles['hero-list__slider']}\r\n                id=\"slider\"\r\n                onclick={event => {\r\n                  const card = event.target.closest(`div.hero-card`);\r\n                  let id = null;\r\n                  if (!card) {\r\n                    idHandler(null);\r\n                    heroHandler(null);\r\n                    return;\r\n                  }\r\n                  id = +card.dataset.id;\r\n                  idHandler(id);\r\n                  const hero = getHero(heroList, id);\r\n                  heroHandler(hero);\r\n                  setNeedReload(true);\r\n                }}\r\n              >\r\n                <HeroesList heroes={heroList} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport Image from '../Image/Image';\r\nimport styles from './styles.css';\r\n\r\nexport default function Input({ state, imgNeed, stateApp }) {\r\n  return (\r\n    <>\r\n      {state['values'].map(value => (\r\n        <label class={`form-label ${state.labelClasses.map(_class => styles[_class]).join(' ')}`}>\r\n          <input\r\n            type={state.type}\r\n            class={`\r\n              ${\r\n                state.inputClasses.includes('visually-hidden') ? 'visually-hidden' : ''\r\n              } ${state.inputClasses.map(_class => styles[_class]).join(' ')}`}\r\n            value={state.placeholder ? stateApp[state.name] || '' : value}\r\n            name={state.name}\r\n            placeholder={state.placeholder || null}\r\n            checked={stateApp[state.name] === value}\r\n          />\r\n          {imgNeed === true ? (\r\n            <Image\r\n              value={value}\r\n              url={state['imgUrls'][value]}\r\n              width={'120px'}\r\n              imgClasses={[styles['img-checkbox']]}\r\n            />\r\n          ) : (\r\n            ''\r\n          )}\r\n          <span\r\n            class={`label ${state.spanClasses.includes('visually-hidden') ? 'visually-hidden' : ''}\r\n              ${state.spanClasses.map(_class => styles[_class]).join(' ')}\r\n            `}\r\n          >\r\n            {value.length > 0 ? value : 'None'}\r\n          </span>\r\n        </label>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement } from '../../framework/element';\r\nimport styles from './styles.css';\r\n\r\nexport default function Legend({ state }) {\r\n  if (!state.legend) {\r\n    return null;\r\n  }\r\n  return <legend class={`legend ${styles[state.legendClasses]}`}>{state.legend}</legend>;\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport Input from '../Input/Input';\r\nimport Legend from '../Legend/Legend';\r\nimport styles from './styles.css';\r\n\r\nexport default function Fieldset({ state, imgNeed, isFieldset, stateApp }) {\r\n  if (isFieldset) {\r\n    return (\r\n      <>\r\n        <fieldset class={`fieldset ${styles[state.fieldsetClasses]}`}>\r\n          <Legend state={state} />\r\n          <Input state={state} imgNeed={imgNeed} stateApp={stateApp} />\r\n        </fieldset>\r\n      </>\r\n    );\r\n  }\r\n  return <Input state={state} imgNeed={imgNeed} stateApp={stateApp} />;\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport Fieldset from '../Fieldset/Fieldset';\r\nimport styles from './styles.css';\r\n\r\nexport default function Form({\r\n  formState,\r\n  listener,\r\n  imgNeed = false,\r\n  isFieldset = false,\r\n  resetNeed = false,\r\n  resetFilterHandler = null,\r\n  state,\r\n  setNeedReload,\r\n}) {\r\n  return (\r\n    <form\r\n      class={`form ${styles[formState[0].formClasses]}`}\r\n      onChange={event => {\r\n        const element = event.target.closest('input');\r\n        if (!element) {\r\n          return;\r\n        }\r\n        switch (element.value) {\r\n          case 'all':\r\n            state[element.name] = null;\r\n            break;\r\n          default:\r\n            state[element.name] = element.value;\r\n        }\r\n        listener(state);\r\n        setNeedReload(true);\r\n      }}\r\n    >\r\n      {formState.map(_state => (\r\n        <Fieldset state={_state} imgNeed={imgNeed} isFieldset={isFieldset} stateApp={state} />\r\n      ))}\r\n      {resetNeed ? (\r\n        <>\r\n          <button\r\n            type=\"reset\"\r\n            class={`btn btn-reset`}\r\n            name=\"reset\"\r\n            type=\"reset\"\r\n            onClick={event => resetFilterHandler()}\r\n          >\r\n            Reset\r\n          </button>\r\n        </>\r\n      ) : null}\r\n    </form>\r\n  );\r\n}\r\n","import allUrl from './img/all.png';\nimport gryffindorUrl from './img/gryffindor.png';\nimport hufflepuffUrl from './img/hufflepuff.png';\nimport ravenclawUrl from './img/ravenclaw.png';\nimport slytherinUrl from './img/slytherin.png';\n\nconst FORM_STATE = {\n  faculty: [\n    {\n      name: 'house',\n      values: ['Gryffindor', 'Hufflepuff', 'Ravenclaw', 'Slytherin', 'All'],\n      inputClasses: ['faculty-form__box', 'visually-hidden'],\n      imgClasses: ['img-checkbox'],\n      labelClasses: [],\n      legendClasses: '',\n      formClasses: 'faculty-form',\n      spanClasses: ['visually-hidden'],\n      imgUrls: {\n        Gryffindor: gryffindorUrl,\n        Hufflepuff: hufflepuffUrl,\n        Ravenclaw: ravenclawUrl,\n        Slytherin: slytherinUrl,\n        All: allUrl,\n      },\n      legend: '',\n      placeholder: '',\n      type: 'radio',\n    },\n  ],\n\n  filter: [\n    {\n      name: 'hogwarts',\n      values: ['Staff', 'Student', '', 'All'],\n      inputClasses: ['radio-input', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label'],\n      formClasses: 'filter-form',\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: 'Filter by Staff',\n      placeholder: '',\n      type: 'radio',\n    },\n\n    {\n      name: 'gender',\n      values: ['Male', 'Female', 'All'],\n      inputClasses: ['radio-input', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label'],\n      formClasses: 'filter-form',\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: 'Filter by Gender',\n      placeholder: '',\n      type: 'radio',\n    },\n\n    {\n      name: 'alive',\n      values: ['Alive', 'Dead', 'All'],\n      inputClasses: ['radio-input', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label'],\n      formClasses: 'filter-form',\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: 'Filter by Destiny',\n      placeholder: '',\n      type: 'radio',\n    },\n\n    {\n      name: 'name',\n      values: [''],\n      inputClasses: ['text-input'],\n      imgClasses: [],\n      labelClasses: ['filter-form__label', 'form-label__text'],\n      formClasses: 'filter-form',\n      spanClasses: ['visually-hidden'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: 'filter-form__legend',\n      legend: '',\n      placeholder: \"Hero's name\",\n      type: 'search',\n    },\n  ],\n\n  random: [\n    {\n      name: 'random',\n      values: ['Get random heroes'],\n      inputClasses: ['input, radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: 'filter-form__fieldset',\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Gnerate random Heroes',\n      placeholder: '',\n      type: 'radio',\n    },\n  ],\n};\n\nexport default FORM_STATE;\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement } from '../../framework/element';\r\nimport Form from '../Form/Form';\r\nimport FORM_STATE from '../../js/buildState';\r\nimport styles from './styles.css';\r\n\r\nexport default function Aside({ filterHandler, resetHandler, state, setNeedReload }) {\r\n  return (\r\n    <aside class={styles.aside}>\r\n      <Form\r\n        formState={FORM_STATE.filter}\r\n        listener={filterHandler}\r\n        imgNeed={false}\r\n        isFieldset={true}\r\n        resetNeed={true}\r\n        resetFilterHandler={resetHandler}\r\n        state={state}\r\n        setNeedReload={setNeedReload}\r\n      />\r\n    </aside>\r\n  );\r\n}\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement } from '../../framework/element';\r\nimport Form from '../Form/Form';\r\nimport FORM_STATE from '../../js/buildState';\r\nimport styles from './styles.css';\r\n\r\nexport default function Header({ funcFaculty, state, setStateChanged, setNeedReload }) {\r\n  return (\r\n    <header class={styles.header}>\r\n      <div class={'wrapper'}>\r\n        <h1 class={`title title-main`}>Welcome to the magic World of Hogwarts</h1>\r\n        <Form\r\n          formState={FORM_STATE.faculty}\r\n          listener={funcFaculty}\r\n          imgNeed={true}\r\n          state={state}\r\n          setNeedReload={setNeedReload}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","export default function sliderMove(event) {\r\n  const slider = document.querySelector('#slider');\r\n  const sliderWidth = slider.offsetWidth;\r\n  const cardWidth = slider.querySelector(`div`).offsetWidth + 15;\r\n  const direction = +event.target.dataset.dir;\r\n  const cardsPerSlider = Math.round(sliderWidth / cardWidth);\r\n  const totalSliderWidth = cardWidth * slider.children.length;\r\n  const left = slider.style.left ? parseInt(slider.style.left, 10) : 0;\r\n  if (\r\n    Math.abs(left + direction * cardWidth) >\r\n    totalSliderWidth - (cardsPerSlider === 1 ? cardsPerSlider : cardsPerSlider - 1) * cardWidth\r\n  ) {\r\n    slider.style.left = '0px';\r\n  } else if (left + direction * cardWidth > 0) {\r\n    slider.style.left = `-${\r\n      (slider.children.length * cardWidth - cardsPerSlider * cardWidth) * direction\r\n    }px`;\r\n  } else {\r\n    slider.style.left = `${left + cardWidth * direction}px`;\r\n  }\r\n}\r\n","import { useState } from '../framework/hooks';\r\n\r\nexport default function filterFromState(dataHeroes, state) {\r\n  const fileteredHeroes = Object.entries(state).reduce((initial, entry) => {\r\n    if (entry[1] !== null) {\r\n      const [key, value] = entry;\r\n      if (value === 'All') {\r\n        return initial;\r\n      }\r\n      const newdataHeroes = initial.filter(hero => {\r\n        switch (key) {\r\n          case 'name':\r\n            return hero[key].toLowerCase().includes(value.toLowerCase());\r\n          default:\r\n            return hero[key].toLowerCase() === value.toLowerCase();\r\n        }\r\n      });\r\n      return newdataHeroes;\r\n    }\r\n    return initial;\r\n  }, dataHeroes);\r\n  if (fileteredHeroes.length === 0) {\r\n    throw new Error('No magic heros matching current parameters. Please, reload.');\r\n  }\r\n  return fileteredHeroes;\r\n}\r\n","class Hero {\r\n  constructor({\r\n    name,\r\n    dateOfBirth,\r\n    eyeColour,\r\n    hairColour,\r\n    gender,\r\n    hogwartsStaff,\r\n    hogwartsStudent,\r\n    house,\r\n    image,\r\n    patronus,\r\n    species,\r\n    alive,\r\n    actor,\r\n  }) {\r\n    this.name = name;\r\n    this.dateOfBirth = dateOfBirth;\r\n    this.eyeColour = eyeColour;\r\n    this.hairColour = hairColour;\r\n    this.gender = gender;\r\n    this.hogwartsStaff = hogwartsStaff;\r\n    this.hogwartsStudent = hogwartsStudent;\r\n    this.hogwarts = this.assignHoggwarts();\r\n    this.house = house;\r\n    this.patronus = patronus;\r\n    this.species = species;\r\n    this.image = `${image.slice(0, 4)}s${image.slice(4)}`;\r\n    this.alive = alive === true ? 'alive' : 'dead';\r\n    this.actor = actor;\r\n    this.id = null;\r\n  }\r\n\r\n  fromHogwarts = () => !!(this.hogwartsStaff || this.hogwartsStudent);\r\n\r\n  assignHoggwarts = () => {\r\n    switch (this.fromHogwarts()) {\r\n      case true:\r\n        switch (this.hogwartsStaff) {\r\n          case true:\r\n            return 'staff';\r\n          default:\r\n            return 'student';\r\n        }\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n}\r\n\r\nexport default Hero;\r\n","import Hero from '../js/hero';\r\n\r\nexport default function constructHeroesList(dataHeroes) {\r\n  let id = 1;\r\n  const heroes = dataHeroes.map(item => {\r\n    const hero = new Hero(item);\r\n    hero.id = id;\r\n    id += 1;\r\n    return hero;\r\n  });\r\n  return heroes;\r\n}\r\n","import constructHeroesList from './getHroesList';\r\nconst URL_ADDR = 'https://hp-api.herokuapp.com/api/characters';\r\n\r\nexport default function getHeroesFromServer() {\r\n  return fetch(`${URL_ADDR}`)\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(dataHeroes => constructHeroesList(dataHeroes))\r\n    .catch(error => {\r\n      throw new Error('Cannot load the data. Please, reload');\r\n    });\r\n}\r\n","import { useEffect, useState } from './framework/hooks';\r\nimport filterFromState from './data/filterHeroes';\r\nimport getHeroesFromServer from './data/getData';\r\nimport { getHero } from './js/utils';\r\n\r\nexport const useHeroes = () => {\r\n  const [heroes, setHeroes] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [heroId, setHeroId] = useState(null);\r\n  const [hero, setHero] = useState(null);\r\n  const [needReload, setNeedReload] = useState(true);\r\n  let [state, setState] = useState({\r\n    house: null,\r\n    gender: null,\r\n    name: null,\r\n    hogwarts: null,\r\n    isAlive: null,\r\n  });\r\n  const resetState = () => {\r\n    state = {\r\n      house: null,\r\n      gender: null,\r\n      name: null,\r\n      hogwarts: null,\r\n      isAlive: null,\r\n    };\r\n    setState(state);\r\n    setNeedReload(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (needReload) {\r\n      getHeroesFromServer()\r\n        .then(heroesList => {\r\n          const heroesData = filterFromState(heroesList, state);\r\n          return heroesData;\r\n        })\r\n        .then(heroesData => {\r\n          const heroItemId = heroId || null;\r\n          const heroItem = getHero(heroesData, heroId);\r\n          setHeroes(heroesData);\r\n          setHero(heroItem);\r\n          setHeroId(heroItemId);\r\n          setNeedReload(false);\r\n        })\r\n        .catch(errorItem => {\r\n          setError(errorItem);\r\n          setHeroes([]);\r\n          setHeroId(null);\r\n          setHero(null);\r\n          setNeedReload(false);\r\n        });\r\n    }\r\n  }, [heroes, heroId, hero, error, state, needReload]);\r\n\r\n  return {\r\n    heroes,\r\n    heroId,\r\n    hero,\r\n    error,\r\n    setState,\r\n    setHero,\r\n    setHeroId,\r\n    resetState,\r\n    state,\r\n    setNeedReload,\r\n  };\r\n};\r\n","/** @jsx createElement */\r\n/** @jsxFrag createFragment */\r\nimport { createElement, createFragment } from '../../framework/element';\r\nimport Main from '../Main/Main';\r\nimport Aside from '../Aside/Aside';\r\nimport Header from '../Header/Header';\r\nimport styles from './styles.css';\r\nimport sliderHandler from '../../handlers/slider';\r\nimport { setUrl, updateStateFromUrl } from '../../js/utils';\r\nimport { useHeroes } from '../../customHooks';\r\n\r\nexport default function App() {\r\n  const {\r\n    heroes,\r\n    heroId,\r\n    hero,\r\n    error,\r\n    setState,\r\n    setHero,\r\n    setHeroId,\r\n    resetState,\r\n    state,\r\n    setNeedReload,\r\n  } = useHeroes();\r\n  setUrl(state);\r\n  const template = (\r\n    <>\r\n      <Header funcFaculty={setState} state={state} setNeedReload={setNeedReload} />\r\n      <div class={`wrapper ${styles['main-wrapper']}`}>\r\n        <Aside\r\n          filterHandler={setState}\r\n          resetHandler={resetState}\r\n          state={state}\r\n          setNeedReload={setNeedReload}\r\n        />\r\n        <Main\r\n          hero={hero}\r\n          heroList={heroes}\r\n          idHandler={setHeroId}\r\n          heroHandler={setHero}\r\n          error={error}\r\n          errorHandler={resetState}\r\n          sliderHandler={sliderHandler}\r\n          state={state}\r\n          setNeedReload={setNeedReload}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n  return template;\r\n}\r\n","import { render } from './framework/framework';\r\nimport App from './components/App/App';\r\n\r\nrender(App, document.querySelector('#root'));\r\n"]}