{"version":3,"sources":["js/hero.js","js/buildState.js","js/script.js"],"names":["Hero","constructor","name","dateOfBirth","eyeColour","hairColour","gender","hogwartsStaff","hogwartsStudent","house","image","patronus","species","alive","actor","fromHogwarts","hogwarts","assignHoggwarts","slice","id","FORM_STATE","faculty","values","inputClasses","imgClasses","labelClasses","formClasses","spanClasses","imgUrls","Gryffindor","gryffindorUrl","Hufflepuff","hufflepuffUrl","Ravenclaw","ravenclawUrl","Slytherin","slytherinUrl","All","allUrl","filter","fieldsetClasses","legendClasses","legend","random","URL","getheroesFromServer","path","Promise","resolve","reject","xhr","XMLHttpRequest","responseType","open","addEventListener","status","alert","statusText","response","send","then","dataHeroes","window","constructHeroesList","heroes","map","item","hero","getRandomHero","Math","floor","length","getHero","find","filterFromState","fileteredHeroes","Object","entries","STATE","reduce","initial","entry","result","key","value","newdataHeroes","toLowerCase","includes","resultHeroes","generateOccupation","occupationTemplate","renderHeroSmall","template","styles","renderHeroBig","renderHeroesList","forEach","heroTemplate","createImg","state","_class","join","createInputContainer","imgNeed","isFieldset","label","createInput","templateInput","createForm","formState","listener","resetNeed","resetFilterHandler","_state","createHeader","funcFaculty","header","wrapper","title","createAside","filterHandler","resetHandler","aside","createMain","heroList","cardHandler","main","results","createBodyMain","heroesList","formHandler","renderApp","heroesListTemplate","formFilterHandler","document","querySelector","innerHTML","getPathOnFilter","event","element","target","closest","staff","isAlive","createApp","card","dataset","some"],"mappings":";AAkDeA,aAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,KAAAA,EAAAA,OAAAA,eAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAlDf,MAAMA,EACJC,aAAY,KACVC,EADU,YAEVC,EAFU,UAGVC,EAHU,WAIVC,EAJU,OAKVC,EALU,cAMVC,EANU,gBAOVC,EAPU,MAQVC,EARU,MASVC,EATU,SAUVC,EAVU,QAWVC,EAXU,MAYVC,EAZU,MAaVC,IAmBa,EAAA,KAAA,eAAA,OAAS,KAAKP,gBAAiB,KAAKC,kBAEjC,EAAA,KAAA,kBAAA,KACR,OAAA,KAAKO,gBACN,KAAA,EACK,OAAA,KAAKR,eACN,KAAA,EACI,MAAA,QACT,QACS,MAAA,UAEb,QACS,MAAA,MA7BNL,KAAAA,KAAOA,EACPC,KAAAA,YAAcA,EACdC,KAAAA,UAAYA,EACZC,KAAAA,WAAaA,EACbC,KAAAA,OAASA,EACTC,KAAAA,cAAgBA,EAChBC,KAAAA,gBAAkBA,EAClBQ,KAAAA,SAAW,KAAKC,kBAChBR,KAAAA,MAAQA,EACRE,KAAAA,SAAWA,EACXC,KAAAA,QAAUA,EACVF,KAAAA,SAAWA,EAAMQ,MAAM,EAAG,MAAMR,EAAMQ,MAAM,KAC5CL,KAAAA,OAAkB,IAAVA,EAAiB,QAAU,OACnCC,KAAAA,MAAQA,EACRK,KAAAA,GAAK,MAoBCnB,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;;;;;;;;;;;AC5Cf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EANA,IAAA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,0BACA,EAAA,EAAA,QAAA,0BACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,yBAEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,MAAMoB,EAAa,CACjBC,QAAS,CACP,CACEnB,KAAM,QACNoB,OAAQ,CAAC,aAAc,aAAc,YAAa,YAAa,OAC/DC,aAAc,CAAC,oBAAqB,mBACpCC,WAAY,CAAC,gBACbC,aAAc,GACdC,YAAa,CAAC,OAAQ,gBACtBC,YAAa,CAAC,mBACdC,QAAS,CACPC,WAAYC,EADL,QAEPC,WAAYC,EAFL,QAGPC,UAAWC,EAHJ,QAIPC,UAAWC,EAJJ,QAKPC,IAAKC,EAAAA,WAKXC,OAAQ,CACN,CACErC,KAAM,WACNoB,OAAQ,CAAC,QAAS,UAAW,GAAI,OACjCC,aAAc,CAAC,oBAAqB,2BAA4B,mBAChEC,WAAY,GACZC,aAAc,CAAC,aAAc,sBAC7BC,YAAa,CAAC,OAAQ,eACtBC,YAAa,CAAC,QAAS,eACvBa,gBAAiB,CAAC,WAAY,yBAC9BC,cAAe,CAAC,SAAU,uBAC1BC,OAAQ,mBAGV,CACExC,KAAM,SACNoB,OAAQ,CAAC,OAAQ,SAAU,OAC3BC,aAAc,CAAC,oBAAqB,2BAA4B,mBAChEC,WAAY,GACZC,aAAc,CAAC,aAAc,sBAC7BC,YAAa,CAAC,OAAQ,eACtBC,YAAa,CAAC,QAAS,eACvBa,gBAAiB,CAAC,WAAY,yBAC9BC,cAAe,CAAC,SAAU,uBAC1BC,OAAQ,oBAGV,CACExC,KAAM,QACNoB,OAAQ,CAAC,QAAS,OAAQ,OAC1BC,aAAc,CAAC,oBAAqB,2BAA4B,mBAChEC,WAAY,GACZC,aAAc,CAAC,aAAc,sBAC7BC,YAAa,CAAC,OAAQ,eACtBC,YAAa,CAAC,QAAS,eACvBa,gBAAiB,CAAC,WAAY,yBAC9BC,cAAe,CAAC,SAAU,uBAC1BC,OAAQ,sBAIZC,OAAQ,CACN,CACEzC,KAAM,SACNoB,OAAQ,CAAC,qBACTC,aAAc,CAAC,oBAAqB,2BAA4B,mBAChEC,WAAY,GACZC,aAAc,CAAC,aAAc,sBAC7BC,YAAa,CAAC,OAAQ,eACtBC,YAAa,CAAC,QAAS,eACvBa,gBAAiB,CAAC,WAAY,yBAC9BC,cAAe,CAAC,SAAU,uBAC1BC,OAAQ,2BAxEd,QAAA,WAAA;;;;AC4ZS,aAlaT,IAAA,EAAA,EAAA,QAAA,cACA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,qBAgaS,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA9ZT,MAAME,EAAM,8CAUZ,SAASC,EAAoBC,GACpB,OAAA,IAAIC,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAM,IAAIC,eAChBD,EAAIE,aAAe,OACnBF,EAAIG,KAAK,SAAUT,KAAOE,KAC1BI,EAAII,iBAAiB,OAAQ,KACR,MAAfJ,EAAIK,SACNC,gCAAgCN,EAAIK,WAAWL,EAAIO,8BACnDR,KAEFD,EAAQE,EAAIQ,YAGdR,EAAII,iBAAiB,QAAS,KAC5BE,gCAAgCN,EAAIK,WAAWL,EAAIO,8BACnDR,MAEFC,EAAIS,SACHC,KAAKC,GAAcC,OAAOC,oBAAoBF,IAKnD,SAASE,EAAoBF,GACvB1C,IAAAA,EAAK,EAOF6C,OANQH,EAAWI,IAAIC,IACtBC,MAAAA,EAAO,IAAInE,EAAJ,QAASkE,GAGfC,OAFPA,EAAKhD,GAAKA,EACVA,GAAM,EACCgD,IAOX,SAASC,EAAcP,GAEdA,OAAAA,EADOQ,KAAKC,MAAMD,KAAK1B,SAAWkB,EAAWU,SAMtD,SAASC,EAAQX,EAAY1C,GAEpBgD,OADMN,EAAWY,KAAKP,GAAQA,EAAK/C,KAAOA,GAMnD,SAASuD,EAAgBb,GAuBhBc,OAtBiBC,OAAOC,QAAQf,OAAOgB,OAAOC,OACnD,CAACC,EAASC,IACRD,EAAQpB,KAAKsB,IACPD,GAAa,OAAbA,EAAM,GAAa,CACf,MAACE,EAAKC,GAASH,EACjBG,GAAU,QAAVA,EACKF,OAAAA,EAEHG,MAAAA,EAAgBH,EAAO3C,OAAO4B,IAC1BgB,OAAAA,GACD,IAAA,OACIhB,OAAAA,EAAKgB,GAAKG,cAAcC,SAASH,EAAME,eAChD,QACSnB,OAAAA,EAAKgB,GAAKG,gBAAkBF,EAAME,iBAGxC,OAAA,IAAIvC,QAAQ,CAACC,EAASC,IAAWD,EAAQqC,IAE3C,OAAA,IAAItC,QAAQ,CAACC,EAASC,IAAWD,EAAQkC,MAEpDnC,QAAQC,QAAQa,IAEKD,KAAK4B,GAAgBA,GAK9C,SAASC,EAAmBtB,GACtBuB,IAAAA,EAAqB,GAelBA,OAdHvB,EAAKpD,eACHoD,EAAK5D,cACPmF,GAAsB,gBAEtBA,GAAsB,cAGxBA,GAAsB,YAExBA,GAAsB,WAClBvB,EAAK1D,QACPiF,QAA2BvB,EAAK1D,SAElCiF,GAAsB,IAMxB,SAASC,EAAgBxB,GACnB,IAACA,EACH,OAiBKyB,qBAfyBC,EAAO,QAAA,gBAAgBA,EAAO,QAAA,iCAC5D1B,EAAKhD,2CAEKgD,EAAKzD,wBAAwByD,EAAKjE,2BAA2B2F,EAAO,QAAP,OACvEA,EAAO,QAAA,gBACJA,EAAO,QAAA,yCACEA,EAAO,QAAA,yCACNA,EAAO,QAAP,SAAmBA,EAAO,QAAA,kBAAkB1B,EAAKjE,4BAClD2F,EAAO,QAAP,QAAkBA,EAAO,QAAA,sCACpBA,EAAO,QAAA,iBAAiB1B,EAAKjE,6CAC7B2F,EAAO,QAAA,uBAAuB1B,EAAKhE,2CACnC0F,EAAO,QAAA,uBAAuB/B,OAAO2B,mBAAmBtB,wCAS7E,SAAS2B,EAAc3B,GACjB,IAACA,EACH,OAyBKyB,yBAtBOC,EAAO,QAAA,gBAAgBA,EAAO,QAAA,4DAC9B1B,EAAKzD,wBAAwByD,EAAKjE,4BAA4B2F,EAAO,QAAP,OAC1EA,EAAO,QAAA,eACLA,EAAO,QAAA,yCACKA,EAAO,QAAA,2CACNA,EAAO,QAAP,SAAmBA,EAAO,QAAA,kBAAkB1B,EAAKjE,8BAClD2F,EAAO,QAAP,QAAkBA,EAAO,QAAA,sCACtBA,EAAO,QAAA,iBAAiB1B,EAAKjE,6CAC7B2F,EAAO,QAAA,uBAAuB1B,EAAKhE,2CACnC0F,EAAO,QAAA,uBAAuB/B,OAAO2B,mBAAmBtB,0CAE3D0B,EAAO,QAAP,QAAkBA,EAAO,QAAA,4CAChBA,EAAO,QAAA,iBAAiB1B,EAAK9D,iDACjCwF,EAAO,QAAA,iBAAiB1B,EAAK/D,2DAC7ByF,EAAO,QAAA,qBAAqB1B,EAAKxD,gDAEtCkF,EAAO,QAAP,QAAkBA,EAAO,QAAA,0DAEpBA,EAAO,QAAA,kBAAkB1B,EAAKrD,kDASrD,SAASiF,EAAiB/B,GACpB4B,IAAAA,EAAW,GAKRA,OAJP5B,EAAOgC,QAAQ7B,IACP8B,MAAAA,EAAenC,OAAO6B,gBAAgBxB,GAC5CyB,GAAYK,IAEPL,EAKT,SAASM,EAAUd,EAAOe,GAChB,qBAAcA,EAAM3E,WAAWyC,IAAImC,GAAUP,EAAOO,QAAAA,IAAWA,GAAQC,KAAK,iBAC9EF,EAAK,QAAYf,UAAcA,WAAyB,QAAVA,EAAkB,MAAQ,UAKhF,SAASkB,EAAqBH,EAAOI,EAASC,GACtCC,MAAAA,EAAQ3C,OAAO4C,YAAYP,EAAOI,GACpCC,OAAAA,sBACyBL,EAAM3D,gBAC9ByB,IAAImC,GAAUP,EAAOO,QAAAA,IAAWA,GAChCC,KAAK,gCACWF,EAAM1D,cAAcwB,IAAImC,GAAUP,EAAOO,QAAAA,IAAWA,GAAQC,KAAK,SAClFF,EAAMzD,4BAEF+D,qBAGDA,EAKT,SAASC,EAAYP,EAAOI,GACtBI,IAAAA,EAAiB,GAgBdA,OAfPR,EAAK,OAAWH,QAAQZ,IAChBqB,MAAAA,mBAAyBN,EAAM1E,aAClCwC,IAAImC,GAAUP,EAAOO,QAAAA,IAAWA,GAChCC,KAAK,4CACuBF,EAAM5E,aAChC0C,IAAImC,GAAUP,EAAOO,QAAAA,IAAWA,GAChCC,KAAK,eAAeF,EAAMjG,eAAekF,sBAC9B,IAAZmB,EAAmBzC,OAAOoC,UAAUd,EAAOe,GAAS,0BACvCA,EAAMxE,YAAYsC,IAAImC,GAAUP,EAAOO,QAAAA,IAAWA,GAAQC,KAAK,SAC9EjB,EAAMb,OAAS,EAAIa,EAAQ,oCAI7BuB,GAAiBF,IAEZE,EAKT,SAASC,EACPC,EACAC,EACAP,GAAU,EACVC,GAAa,EACbO,GAAY,EACZC,EAAqB,MAEjBpB,IAAAA,sBACWiB,EAAU,GAAGnF,YACzBuC,IAAImC,GAAUP,EAAOO,QAAAA,IAAWA,GAChCC,KAAK,mBAAmBS,eACtB,IAAA,IAAIG,KAAUJ,EACjBjB,GAAY9B,OAAOwC,qBAAqBW,EAAQV,EAASC,GAYpDZ,OATHmB,IACFnB,4CACkC,CAAC,MAAO,aACnC3B,IAAImC,GAAUP,EAAOO,QAAAA,IAAWA,GAChCC,KACC,8CACyCW,8BAEnDpB,GAAa,UAMf,SAASsB,EAAaC,GACZ,4BACStB,EAAOuB,QAAAA,6BACRvB,EAAOwB,QAAAA,+BACNxB,EAAOyB,QAAAA,SACtBzB,EAAO,QAAA,qEAEH/B,OAAO8C,WAAWxF,EAAWC,WAAAA,QAAS8F,GAAa,kCAQ3D,SAASI,EAAYC,EAAeC,GAC1B,2BACQ5B,EAAO6B,QAAAA,cACrB5D,OAAO8C,WAAWxF,EAAWmB,WAAAA,OAAQiF,GAAe,GAAO,GAAM,EAAMC,qBAO3E,SAASE,EAAWxD,EAAMyD,EAAUC,GAe3BjC,0BAbQC,EAAOiC,QAAAA,2BACNjC,EAAOkC,QAAAA,gCACLlC,EAAO,QAAA,6BACf1B,4BACY0B,EAAO,QAAA,oDACLA,EAAO,QAAA,mCAAmCgC,+BACpDD,mFAYhB,SAASI,EAAe7D,EAAM8D,EAAYC,EAAaL,EAAaJ,GAC1D,2BACQ5B,EAAOwB,QAAAA,WAAWxB,EAAO,QAAA,iBAAmB,yBACxD/B,OAAOyD,YAAYW,EAAaT,WAChC3D,OAAO6D,WAAWxD,EAAM8D,EAAYJ,mBAO1C,SAASM,EAAUtE,EAAY1C,GACzBgD,IAAAA,EAAO,KACPiE,EAAqB,GACrBnC,EAAe,KACfpC,EAAWU,OAAS,IACtB6D,GAAsBtE,OAAOiC,iBAAiBlC,IAG9CM,EADQ,MAANhD,EACK2C,OAAOU,QAAQX,EAAY1C,GAE3B2C,OAAOM,cAAcP,GAE9BoC,EAAenC,OAAOgC,cAAc3B,GAChCyB,IAAAA,EAAW9B,OAAOoD,aAAamB,GACnCzC,GAAY9B,OAAOkE,eACjB/B,EACAmC,EACAC,EACAR,EACAb,GAEFsB,SAASC,cAAc,cAAcC,UAAY5C,EAKnD,SAAS6C,IACH3E,GAAAA,OAAOgB,MAAMrE,MACPqD,OAAAA,OAAOgB,MAAMrE,OACd,IAAA,MACI,MAAA,GACT,QACU,eAAQqD,OAAOgB,MAAMrE,aAG7BqD,GAAAA,OAAOgB,MAAM9D,SACP8C,OAAAA,OAAOgB,MAAM9D,UACd,IAAA,UACK,SAAE8C,OAAOgB,MAAM9D,SAASsE,iBAC7B,IAAA,QACK,SAAExB,OAAOgB,MAAM9D,SAASsE,gBAClC,QACS,MAAA,GAIR,MAAA,GAKT,SAAS+C,EAAkBK,GACnBC,MAAAA,EAAUD,EAAME,OAAOC,QAAQ,SACjC,GAACF,EAAD,CAGIA,OAAAA,EAAQvD,OACT,IAAA,MACHtB,OAAOgB,MAAM6D,EAAQzI,MAAQ,KAC7B,MACF,QACE4D,OAAOgB,MAAM6D,EAAQzI,MAAQyI,EAAQvD,MAEzCtB,OACGjB,oBAAoBiB,OAAO2E,mBAC3B7E,KAAKC,GAAcC,OAAOY,gBAAgBb,IAC1CD,KAAKC,IACJC,OAAOqE,UAAUtE,MAIvB,SAASmD,IACPlD,OAAOgB,MAAQ,CACbrE,MAAO,KACPH,OAAQ,KACRJ,KAAM,KACN4I,MAAO,KACPC,QAAS,MAEXjF,OAAOjB,oBAAoB,IAAIe,KAAKC,IAClCC,OAAOqE,UAAUtE,EAAY,QAIjC,SAASmF,EAAU7H,EAAK,MACtB2C,OACGjB,oBAAoB,IACpBe,KAAKI,GAAUF,OAAOY,gBAAgBV,IACtCJ,KAAKI,GAAUF,OAAOqE,UAAUnE,EAAQ7C,IAK7C,SAAS0G,EAAYa,GACbO,MAAAA,EAAOP,EAAME,OAAOC,eAAe/E,OAAO+B,OAAO,uBACnD1E,IAAAA,GAAK,EACJ8H,IAGL9H,GAAM8H,EAAKC,QAAQ/H,GACfyD,OAAOtD,OAAOwC,OAAOgB,OAAOqE,KAAK/D,KAAWA,KAC9CzC,OAAS,MAEXmB,OAAOkF,UAAU7H,IA1ZnB2C,OAAOgB,MAAQ,CACbrE,MAAO,KACPH,OAAQ,KACRJ,KAAM,KACNc,SAAU,KACV+H,QAAS,MAEXjF,OAAO+B,OAASA,EAAhB,QAuBA/B,OAAOjB,oBAAsBA,EAa7BiB,OAAOC,oBAAsBA,EAO7BD,OAAOM,cAAgBA,EAOvBN,OAAOU,QAAUA,EA4BjBV,OAAOY,gBAAkBA,EAqBzBZ,OAAO2B,mBAAqBA,EAwB5B3B,OAAO6B,gBAAkBA,EAgCzB7B,OAAOgC,cAAgBA,EAWvBhC,OAAOiC,iBAAmBA,EAO1BjC,OAAOoC,UAAYA,EAiBnBpC,OAAOwC,qBAAuBA,EAsB9BxC,OAAO4C,YAAcA,EA8BrB5C,OAAO8C,WAAaA,EAepB9C,OAAOoD,aAAeA,EAUtBpD,OAAOyD,YAAcA,EAoBrBzD,OAAO6D,WAAaA,EAWpB7D,OAAOkE,eAAiBA,EA0BxBlE,OAAOqE,UAAYA,EAyBnBrE,OAAO2E,gBAAkBA,EA0CzB3E,OAAOkF,UAAYA,EAenBA","file":"script.7f391c67.js","sourceRoot":"..","sourcesContent":["class Hero {\n  constructor({\n    name,\n    dateOfBirth,\n    eyeColour,\n    hairColour,\n    gender,\n    hogwartsStaff,\n    hogwartsStudent,\n    house,\n    image,\n    patronus,\n    species,\n    alive,\n    actor,\n  }) {\n    this.name = name;\n    this.dateOfBirth = dateOfBirth;\n    this.eyeColour = eyeColour;\n    this.hairColour = hairColour;\n    this.gender = gender;\n    this.hogwartsStaff = hogwartsStaff;\n    this.hogwartsStudent = hogwartsStudent;\n    this.hogwarts = this.assignHoggwarts();\n    this.house = house;\n    this.patronus = patronus;\n    this.species = species;\n    this.image = `${image.slice(0, 4)}s${image.slice(4)}`;\n    this.alive = alive === true ? 'alive' : 'dead';\n    this.actor = actor;\n    this.id = null;\n  }\n\n  fromHogwarts = () => !!(this.hogwartsStaff || this.hogwartsStudent);\n\n  assignHoggwarts = () => {\n    switch (this.fromHogwarts()) {\n      case true:\n        switch (this.hogwartsStaff) {\n          case true:\n            return 'staff';\n          default:\n            return 'student';\n        }\n      default:\n        return '';\n    }\n  };\n}\n\nexport default Hero;\n","import allUrl from '../img/all.png';\nimport gryffindorUrl from '../img/gryffindor.png';\nimport hufflepuffUrl from '../img/hufflepuff.png';\nimport ravenclawUrl from '../img/ravenclaw.png';\nimport slytherinUrl from '../img/slytherin.png';\n\nconst FORM_STATE = {\n  faculty: [\n    {\n      name: 'house',\n      values: ['Gryffindor', 'Hufflepuff', 'Ravenclaw', 'Slytherin', 'All'],\n      inputClasses: ['faculty-form__box', 'visually-hidden'],\n      imgClasses: ['img-checkbox'],\n      labelClasses: [],\n      formClasses: ['form', 'faculty-form'],\n      spanClasses: ['visually-hidden'],\n      imgUrls: {\n        Gryffindor: gryffindorUrl,\n        Hufflepuff: hufflepuffUrl,\n        Ravenclaw: ravenclawUrl,\n        Slytherin: slytherinUrl,\n        All: allUrl,\n      },\n    },\n  ],\n\n  filter: [\n    {\n      name: 'hogwarts',\n      values: ['Staff', 'Student', '', 'All'],\n      inputClasses: ['input radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: ['fieldset', 'filter-form__fieldset'],\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Filter by Staff',\n    },\n\n    {\n      name: 'gender',\n      values: ['Male', 'Female', 'All'],\n      inputClasses: ['input radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: ['fieldset', 'filter-form__fieldset'],\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Filter by Gender',\n    },\n\n    {\n      name: 'alive',\n      values: ['Alive', 'Dead', 'All'],\n      inputClasses: ['input radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: ['fieldset', 'filter-form__fieldset'],\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Filter by Destiny',\n    },\n  ],\n\n  random: [\n    {\n      name: 'random',\n      values: ['Get random heroes'],\n      inputClasses: ['input radio-input', 'filter-form-input__radio', 'visually-hidden'],\n      imgClasses: [],\n      labelClasses: ['form-label', 'filter-form__label'],\n      formClasses: ['form', 'filter-form'],\n      spanClasses: ['label', 'label-radio'],\n      fieldsetClasses: ['fieldset', 'filter-form__fieldset'],\n      legendClasses: ['legend', 'filter-form__legend'],\n      legend: 'Gnerate random Heroes',\n    },\n  ],\n};\n\nexport { FORM_STATE };\n","import Hero from './hero.js';\nimport { FORM_STATE } from './buildState.js';\nimport styles from '../css/style.css';\n\nconst URL = 'https://hp-api.herokuapp.com/api/characters';\nwindow.STATE = {\n  house: null,\n  gender: null,\n  name: null,\n  hogwarts: null,\n  isAlive: null,\n};\nwindow.styles = styles;\n\nfunction getheroesFromServer(path) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'json';\n    xhr.open('GET', `${URL}/${path}`);\n    xhr.addEventListener('load', () => {\n      if (xhr.status !== 200) {\n        alert(`Cannot load dataHeroes ${xhr.status}: ${xhr.statusText}. Please, reload`);\n        reject();\n      }\n      resolve(xhr.response);\n    });\n\n    xhr.addEventListener('error', () => {\n      alert(`Cannot load dataHeroes ${xhr.status}: ${xhr.statusText}. Please, reload`);\n      reject();\n    });\n    xhr.send();\n  }).then(dataHeroes => window.constructHeroesList(dataHeroes));\n}\n\nwindow.getheroesFromServer = getheroesFromServer;\n\nfunction constructHeroesList(dataHeroes) {\n  let id = 1;\n  const heroes = dataHeroes.map(item => {\n    const hero = new Hero(item);\n    hero.id = id;\n    id += 1;\n    return hero;\n  });\n  return heroes;\n}\n\nwindow.constructHeroesList = constructHeroesList;\n\nfunction getRandomHero(dataHeroes) {\n  const index = Math.floor(Math.random() * dataHeroes.length);\n  return dataHeroes[index];\n}\n\nwindow.getRandomHero = getRandomHero;\n\nfunction getHero(dataHeroes, id) {\n  const hero = dataHeroes.find(item => item.id === id);\n  return hero;\n}\n\nwindow.getHero = getHero;\n\nfunction filterFromState(dataHeroes) {\n  const fileteredHeroes = Object.entries(window.STATE).reduce(\n    (initial, entry) =>\n      initial.then(result => {\n        if (entry[1] !== null) {\n          const [key, value] = entry;\n          if (value === 'All') {\n            return result;\n          }\n          const newdataHeroes = result.filter(hero => {\n            switch (key) {\n              case 'name':\n                return hero[key].toLowerCase().includes(value.toLowerCase());\n              default:\n                return hero[key].toLowerCase() === value.toLowerCase();\n            }\n          });\n          return new Promise((resolve, reject) => resolve(newdataHeroes));\n        }\n        return new Promise((resolve, reject) => resolve(result));\n      }),\n    Promise.resolve(dataHeroes),\n  );\n  return fileteredHeroes.then(resultHeroes => resultHeroes);\n}\n\nwindow.filterFromState = filterFromState;\n\nfunction generateOccupation(hero) {\n  let occupationTemplate = '';\n  if (hero.fromHogwarts()) {\n    if (hero.hogwartsStaff) {\n      occupationTemplate += 'Professor of ';\n    } else {\n      occupationTemplate += 'Student of ';\n    }\n  } else {\n    occupationTemplate += 'Not from ';\n  }\n  occupationTemplate += 'Hogwarts';\n  if (hero.house) {\n    occupationTemplate += `, ${hero.house}`;\n  }\n  occupationTemplate += '.';\n  return occupationTemplate;\n}\n\nwindow.generateOccupation = generateOccupation;\n\nfunction renderHeroSmall(hero) {\n  if (!hero) {\n    return;\n  }\n  const template = `<div class=\"${styles['hero-card']} ${styles['hero-card__small']}\" data-id=\"${\n    hero.id\n  }\" id=\"hero-card__small\">\n  <img src=\"${hero.image}\" alt=\"Photo of ${hero.name}\" width=\"80\" class=\"${styles['img']} ${\n    styles['card-img']\n  }  ${styles['card-img__small']}\" />\n  <div class=\"${styles['hero-description']}\">\n    <h3 class=\"${styles['title']} ${styles['card-title']}\">${hero.name}</h3>\n    <p class=\"${styles['text']} ${styles['card-text']}\">\n      <span class=\"${styles['hero-name']}\">${hero.name}</span> was bourn\n      <span class=\"${styles['hero-birth-date']}\">${hero.dateOfBirth}</span>.\n      <span class=\"${styles['hero-occupation']}\">${window.generateOccupation(hero)}</span>\n    </p>\n  </div>\n</div>`;\n  return template;\n}\n\nwindow.renderHeroSmall = renderHeroSmall;\n\nfunction renderHeroBig(hero) {\n  if (!hero) {\n    return;\n  }\n  const template = `\n  <div class=\"${styles['hero-card']} ${styles['hero-card__big']}\" id = \"hero-card__big\">\n    <img src=\"${hero.image}\" alt=\"Photo of ${hero.name}\" width=\"150\" class=\"${styles['img']} ${\n    styles['card-img']\n  } ${styles['card-img__big']}\" />\n    <div class=\"${styles['hero-description']}\">\n      <h2 class=\"${styles['title']} ${styles['card-title']}\">${hero.name}</h2>\n      <p class=\"${styles['text']} ${styles['card-text']}\">\n      <span class=\"${styles['hero-name']}\">${hero.name}</span> was bourn\n      <span class=\"${styles['hero-birth-date']}\">${hero.dateOfBirth}</span>.\n      <span class=\"${styles['hero-occupation']}\">${window.generateOccupation(hero)}</span>\n      </p>\n      <p class=\"${styles['text']} ${styles['card-text']}\">\n        Has <span class=\"${styles['hero-hair']}\">${hero.hairColour}</span> hair,\n        <span class=\"${styles['hero-eyes']}\">${hero.eyeColour}</span> eyes. Patronus -\n        <span class=\"${styles['hero-patronus']}\">${hero.patronus}</span>\n      </p>\n      <p class=\"${styles['text']} ${styles['card-text']}\">\n        Acted by\n        <span class=\"${styles['hero-actor']}\">${hero.actor}</span>.\n      </p>\n    </div>\n  </div>`;\n  return template;\n}\n\nwindow.renderHeroBig = renderHeroBig;\n\nfunction renderHeroesList(heroes) {\n  let template = '';\n  heroes.forEach(hero => {\n    const heroTemplate = window.renderHeroSmall(hero);\n    template += heroTemplate;\n  });\n  return template;\n}\n\nwindow.renderHeroesList = renderHeroesList;\n\nfunction createImg(value, state) {\n  return `<img class=\"${state.imgClasses.map(_class => styles[_class] || _class).join(' ')}\" \n  src=${state['imgUrls'][value]} alt=${value} width=${value === 'All' ? '150' : '120'}/>`;\n}\n\nwindow.createImg = createImg;\n\nfunction createInputContainer(state, imgNeed, isFieldset) {\n  const label = window.createInput(state, imgNeed);\n  if (isFieldset) {\n    return `<fieldset class=\"${state.fieldsetClasses\n      .map(_class => styles[_class] || _class)\n      .join(' ')}\">\n      <legend class=\"${state.legendClasses.map(_class => styles[_class] || _class).join(' ')}\">${\n      state.legend\n    }</legend>\n        ${label}\n    </fieldset>`;\n  }\n  return label;\n}\n\nwindow.createInputContainer = createInputContainer;\n\nfunction createInput(state, imgNeed) {\n  let templateInput = ``;\n  state['values'].forEach(value => {\n    const label = `<label class=\"${state.labelClasses\n      .map(_class => styles[_class] || _class)\n      .join(' ')}\">\n      <input type=\"radio\" class=\"${state.inputClasses\n        .map(_class => styles[_class] || _class)\n        .join(' ')}\" name=\"${state.name}\" value=${value}></input>\n      ${imgNeed === true ? window.createImg(value, state) : ''}\n      <span class=\"${state.spanClasses.map(_class => styles[_class] || _class).join(' ')}\">${\n      value.length > 0 ? value : 'None'\n    }</span>\n    </label>\n    `;\n    templateInput += label;\n  });\n  return templateInput;\n}\n\nwindow.createInput = createInput;\n\nfunction createForm(\n  formState,\n  listener,\n  imgNeed = false,\n  isFieldset = false,\n  resetNeed = false,\n  resetFilterHandler = null,\n) {\n  let template = `\n  <form class=\"${formState[0].formClasses\n    .map(_class => styles[_class] || _class)\n    .join(' ')}\" onclick=\"(${listener})(event);\">`;\n  for (let _state of formState) {\n    template += window.createInputContainer(_state, imgNeed, isFieldset);\n  }\n\n  if (resetNeed) {\n    template += `\n        <button type=\"reset\" class=\"${['btn', 'btn-reset']\n          .map(_class => styles[_class] || _class)\n          .join(\n            ' ',\n          )}\" name=\"reset\" type=\"reset\"  onclick=\"(${resetFilterHandler})(event);\">Reset</button>`;\n  }\n  template += `</form>`;\n  return template;\n}\n\nwindow.createForm = createForm;\n\nfunction createHeader(funcFaculty) {\n  return `\n  <header class=\"${styles.header}\">\n    <div class=\"${styles.wrapper}\">\n      <h1 class \"${styles.title} ${\n    styles['title-main']\n  }\">Welcome to the magic World of Hogwarts</h1>\n      ${window.createForm(FORM_STATE.faculty, funcFaculty, true)}\n    </div>\n  </header>\n  `;\n}\n\nwindow.createHeader = createHeader;\n\nfunction createAside(filterHandler, resetHandler) {\n  return `\n  <aside class=\"${styles.aside}\">\n  ${window.createForm(FORM_STATE.filter, filterHandler, false, true, true, resetHandler)}\n  </aside>\n  `;\n}\n\nwindow.createAside = createAside;\n\nfunction createMain(hero, heroList, cardHandler) {\n  let template = `\n  <main class=\"${styles.main}\">\n    <div class=\"${styles.results}\">\n      <div class=\"${styles['hero-list']}\">\n          ${hero}\n          <div class=\"${styles['hero-list__wrapper']}\">\n            <div class=\"${styles['hero-list__slider']}\" onclick=\"(${cardHandler})(event);\">\n              ${heroList}\n            </div>\n          </div>\n      </div>\n    </div>\n  </main>\n  `;\n  return template;\n}\n\nwindow.createMain = createMain;\n\nfunction createBodyMain(hero, heroesList, formHandler, cardHandler, resetHandler) {\n  return `\n  <div class = \"${styles.wrapper} ${styles['main-wrapper'] || 'main-wrapper'}\">\n    ${window.createAside(formHandler, resetHandler)}\n    ${window.createMain(hero, heroesList, cardHandler)}\n  </div>\n  `;\n}\n\nwindow.createBodyMain = createBodyMain;\n\nfunction renderApp(dataHeroes, id) {\n  let hero = null;\n  let heroesListTemplate = '';\n  let heroTemplate = null;\n  if (dataHeroes.length > 0) {\n    heroesListTemplate += window.renderHeroesList(dataHeroes);\n  }\n  if (id != null) {\n    hero = window.getHero(dataHeroes, id);\n  } else {\n    hero = window.getRandomHero(dataHeroes);\n  }\n  heroTemplate = window.renderHeroBig(hero);\n  let template = window.createHeader(formFilterHandler);\n  template += window.createBodyMain(\n    heroTemplate,\n    heroesListTemplate,\n    formFilterHandler,\n    cardHandler,\n    resetFilterHandler,\n  );\n  document.querySelector('.container').innerHTML = template;\n}\n\nwindow.renderApp = renderApp;\n\nfunction getPathOnFilter() {\n  if (window.STATE.house) {\n    switch (window.STATE.house) {\n      case 'All':\n        return '';\n      default:\n        return `house/${window.STATE.house}`;\n    }\n  } else {\n    if (window.STATE.hogwarts) {\n      switch (window.STATE.hogwarts) {\n        case 'Student':\n          return `${window.STATE.hogwarts.toLowerCase()}s`;\n        case 'Staff':\n          return `${window.STATE.hogwarts.toLowerCase()}`;\n        default:\n          return '';\n      }\n    }\n  }\n  return '';\n}\n\nwindow.getPathOnFilter = getPathOnFilter;\n\nfunction formFilterHandler(event) {\n  const element = event.target.closest('input');\n  if (!element) {\n    return;\n  }\n  switch (element.value) {\n    case 'all':\n      window.STATE[element.name] = null;\n      break;\n    default:\n      window.STATE[element.name] = element.value;\n  }\n  window\n    .getheroesFromServer(window.getPathOnFilter())\n    .then(dataHeroes => window.filterFromState(dataHeroes))\n    .then(dataHeroes => {\n      window.renderApp(dataHeroes);\n    });\n}\n\nfunction resetFilterHandler() {\n  window.STATE = {\n    house: null,\n    gender: null,\n    name: null,\n    staff: null,\n    isAlive: null,\n  };\n  window.getheroesFromServer('').then(dataHeroes => {\n    window.renderApp(dataHeroes, null);\n  });\n}\n\nfunction createApp(id = null) {\n  window\n    .getheroesFromServer('')\n    .then(heroes => window.filterFromState(heroes))\n    .then(heroes => window.renderApp(heroes, id));\n}\n\nwindow.createApp = createApp;\n\nfunction cardHandler(event) {\n  const card = event.target.closest(`div.${window.styles['hero-card__small']}`);\n  let id = false;\n  if (!card) {\n    return;\n  }\n  id = +card.dataset.id;\n  if (Object.values(window.STATE).some(value => !!value)) {\n    random = null;\n  }\n  window.createApp(id);\n}\n\ncreateApp();\n"]}